Terminals unused in grammar

   DEFINE_TOK
   XOR_TOK
   COLON_TOK
   COMMA_TOK
   SWITCH_TOK
   CASE_TOK
   DEFAULT_TOK
   FOR_TOK
   ELSEIF_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   ERROR_TOK
   RETURN_TOK
   TYPE_TOK


State 0 conflicts: 5 shift/reduce
State 1 conflicts: 5 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 5 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: block

    2 nonfunctionblock: CURL_LPAREN_TOK block CURL_RPAREN_TOK
    3                 | statement

    4 block: nonfunctionblock
    5      | block statement
    6      | %empty

    7 statement: exp SEMICOLON_TOK
    8          | ifstatement
    9          | loopstatement

   10 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex
   11            | IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

   12 ifstatementex: %empty

   13 loopstatement: WHILE_TOK condexp nonfunctionblock

   14 condexp: LPAREN_TOK exp4 RPAREN_TOK

   15 exp4: LPAREN_TOK exp4 RPAREN_TOK
   16     | exp3 OR_TOK exp4
   17     | exp3 AND_TOK exp4
   18     | NOT_TOK exp4
   19     | exp3

   20 exp3: LPAREN_TOK exp3 RPAREN_TOK
   21     | exp2 LT_TOK exp2
   22     | exp2 GT_TOK exp2
   23     | exp2 GTEQ_TOK exp2
   24     | exp2 LTEQ_TOK exp2
   25     | exp2 COMPARE_TOK exp2
   26     | exp2 NOT_EQ_TOK exp2
   27     | exp2

   28 exp: ID_TOK EQ_TOK exp2
   29    | ID_TOK PLUS_EQ_TOK exp2
   30    | ID_TOK MINUS_EQ_TOK exp2
   31    | ID_TOK MULT_EQ_TOK exp2
   32    | ID_TOK DIVIDE_EQ_TOK exp2
   33    | ID_TOK MOD_EQ_TOK exp2
   34    | exp0

   35 exp2: LPAREN_TOK exp2 RPAREN_TOK
   36     | MINUS_TOK exp2
   37     | exp2 PLUS_TOK exp2
   38     | exp2 MINUS_TOK exp2
   39     | exp2 MULT_TOK exp2
   40     | exp2 DIVIDE_TOK exp2
   41     | exp2 MOD_TOK exp2
   42     | exp0
   43     | var

   44 exp0: ID_TOK PLUS_PLUS_TOK
   45     | ID_TOK MINUS_MINUS_TOK
   46     | PLUS_PLUS_TOK ID_TOK
   47     | MINUS_MINUS_TOK ID_TOK

   48 var: ID_TOK
   49    | INTCONST
   50    | DOUBLECONST
   51    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 14 15 20 35
RPAREN_TOK (259) 14 15 20 35
CURL_LPAREN_TOK (260) 2
CURL_RPAREN_TOK (261) 2
DEFINE_TOK (262)
EQ_TOK (263) 28
GT_TOK (264) 22
LT_TOK (265) 21
MINUS_TOK (266) 36 38
PLUS_TOK (267) 37
MULT_TOK (268) 39
DIVIDE_TOK (269) 40
MOD_TOK (270) 41
XOR_TOK (271)
NOT_TOK (272) 18
AND_TOK (273) 17
OR_TOK (274) 16
COLON_TOK (275)
SEMICOLON_TOK (276) 7
COMMA_TOK (277)
SWITCH_TOK (278)
CASE_TOK (279)
DEFAULT_TOK (280)
WHILE_TOK (281) 13
FOR_TOK (282)
IF_TOK (283) 10 11
ELSE_TOK (284) 11
ELSEIF_TOK (285)
COMPARE_TOK (286) 25
GTEQ_TOK (287) 23
LTEQ_TOK (288) 24
NOT_EQ_TOK (289) 26
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292) 29
MINUS_EQ_TOK (293) 30
MULT_EQ_TOK (294) 31
DIVIDE_EQ_TOK (295) 32
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 45 47
PLUS_PLUS_TOK (299) 44 46
MOD_EQ_TOK (300) 33
ERROR_TOK (301)
RETURN_TOK (302)
INTCONST (303) 49
TYPE_TOK (304)
DOUBLECONST (305) 50
CHARCONST (306) 51
ID_TOK (307) 28 29 30 31 32 33 44 45 46 47 48
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
DEBUG (55)
    on left: 1, on right: 0
nonfunctionblock (56)
    on left: 2 3, on right: 4 10 11 13
block (57)
    on left: 4 5 6, on right: 1 2 5
statement (58)
    on left: 7 8 9, on right: 3 5
ifstatement (59)
    on left: 10 11, on right: 8
ifstatementex (60)
    on left: 12, on right: 10 11
loopstatement (61)
    on left: 13, on right: 9
condexp (62)
    on left: 14, on right: 10 11 13
exp4 (63)
    on left: 15 16 17 18 19, on right: 14 15 16 17 18
exp3 (64)
    on left: 20 21 22 23 24 25 26 27, on right: 16 17 19 20
exp (65)
    on left: 28 29 30 31 32 33 34, on right: 7
exp2 (66)
    on left: 35 36 37 38 39 40 41 42 43, on right: 21 22 23 24 25 26
    27 28 29 30 31 32 33 35 36 37 38 39 40 41
exp0 (67)
    on left: 44 45 46 47, on right: 34 42
var (68)
    on left: 48 49 50 51, on right: 43


State 0

    0 $accept: . DEBUG $end

    CURL_LPAREN_TOK  shift, and go to state 1
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    WHILE_TOK        [reduce using rule 6 (block)]
    IF_TOK           [reduce using rule 6 (block)]
    MINUS_MINUS_TOK  [reduce using rule 6 (block)]
    PLUS_PLUS_TOK    [reduce using rule 6 (block)]
    ID_TOK           [reduce using rule 6 (block)]
    $default         reduce using rule 6 (block)

    DEBUG             go to state 7
    nonfunctionblock  go to state 8
    block             go to state 9
    statement         go to state 10
    ifstatement       go to state 11
    loopstatement     go to state 12
    exp               go to state 13
    exp0              go to state 14


State 1

    2 nonfunctionblock: CURL_LPAREN_TOK . block CURL_RPAREN_TOK

    CURL_LPAREN_TOK  shift, and go to state 1
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    WHILE_TOK        [reduce using rule 6 (block)]
    IF_TOK           [reduce using rule 6 (block)]
    MINUS_MINUS_TOK  [reduce using rule 6 (block)]
    PLUS_PLUS_TOK    [reduce using rule 6 (block)]
    ID_TOK           [reduce using rule 6 (block)]
    $default         reduce using rule 6 (block)

    nonfunctionblock  go to state 8
    block             go to state 15
    statement         go to state 10
    ifstatement       go to state 11
    loopstatement     go to state 12
    exp               go to state 13
    exp0              go to state 14


State 2

   13 loopstatement: WHILE_TOK . condexp nonfunctionblock

    LPAREN_TOK  shift, and go to state 16

    condexp  go to state 17


State 3

   10 ifstatement: IF_TOK . condexp nonfunctionblock ifstatementex
   11            | IF_TOK . condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 16

    condexp  go to state 18


State 4

   47 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 19


State 5

   46 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 20


State 6

   28 exp: ID_TOK . EQ_TOK exp2
   29    | ID_TOK . PLUS_EQ_TOK exp2
   30    | ID_TOK . MINUS_EQ_TOK exp2
   31    | ID_TOK . MULT_EQ_TOK exp2
   32    | ID_TOK . DIVIDE_EQ_TOK exp2
   33    | ID_TOK . MOD_EQ_TOK exp2
   44 exp0: ID_TOK . PLUS_PLUS_TOK
   45     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 21
    PLUS_EQ_TOK      shift, and go to state 22
    MINUS_EQ_TOK     shift, and go to state 23
    MULT_EQ_TOK      shift, and go to state 24
    DIVIDE_EQ_TOK    shift, and go to state 25
    MINUS_MINUS_TOK  shift, and go to state 26
    PLUS_PLUS_TOK    shift, and go to state 27
    MOD_EQ_TOK       shift, and go to state 28


State 7

    0 $accept: DEBUG . $end

    $end  shift, and go to state 29


State 8

    4 block: nonfunctionblock .

    $default  reduce using rule 4 (block)


State 9

    1 DEBUG: block .
    5 block: block . statement

    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    $default  reduce using rule 1 (DEBUG)

    statement      go to state 30
    ifstatement    go to state 11
    loopstatement  go to state 12
    exp            go to state 13
    exp0           go to state 14


State 10

    3 nonfunctionblock: statement .

    $default  reduce using rule 3 (nonfunctionblock)


State 11

    8 statement: ifstatement .

    $default  reduce using rule 8 (statement)


State 12

    9 statement: loopstatement .

    $default  reduce using rule 9 (statement)


State 13

    7 statement: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 31


State 14

   34 exp: exp0 .

    $default  reduce using rule 34 (exp)


State 15

    2 nonfunctionblock: CURL_LPAREN_TOK block . CURL_RPAREN_TOK
    5 block: block . statement

    CURL_RPAREN_TOK  shift, and go to state 32
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    statement      go to state 30
    ifstatement    go to state 11
    loopstatement  go to state 12
    exp            go to state 13
    exp0           go to state 14


State 16

   14 condexp: LPAREN_TOK . exp4 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 33
    MINUS_TOK        shift, and go to state 34
    NOT_TOK          shift, and go to state 35
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp4  go to state 40
    exp3  go to state 41
    exp2  go to state 42
    exp0  go to state 43
    var   go to state 44


State 17

   13 loopstatement: WHILE_TOK condexp . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 1
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    nonfunctionblock  go to state 45
    statement         go to state 10
    ifstatement       go to state 11
    loopstatement     go to state 12
    exp               go to state 13
    exp0              go to state 14


State 18

   10 ifstatement: IF_TOK condexp . nonfunctionblock ifstatementex
   11            | IF_TOK condexp . nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 1
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    nonfunctionblock  go to state 46
    statement         go to state 10
    ifstatement       go to state 11
    loopstatement     go to state 12
    exp               go to state 13
    exp0              go to state 14


State 19

   47 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 47 (exp0)


State 20

   46 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 46 (exp0)


State 21

   28 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 48
    exp0  go to state 43
    var   go to state 44


State 22

   29 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 49
    exp0  go to state 43
    var   go to state 44


State 23

   30 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 50
    exp0  go to state 43
    var   go to state 44


State 24

   31 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 51
    exp0  go to state 43
    var   go to state 44


State 25

   32 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 52
    exp0  go to state 43
    var   go to state 44


State 26

   45 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 45 (exp0)


State 27

   44 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 44 (exp0)


State 28

   33 exp: ID_TOK MOD_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 53
    exp0  go to state 43
    var   go to state 44


State 29

    0 $accept: DEBUG $end .

    $default  accept


State 30

    5 block: block statement .

    $default  reduce using rule 5 (block)


State 31

    7 statement: exp SEMICOLON_TOK .

    $default  reduce using rule 7 (statement)


State 32

    2 nonfunctionblock: CURL_LPAREN_TOK block CURL_RPAREN_TOK .

    $default  reduce using rule 2 (nonfunctionblock)


State 33

   15 exp4: LPAREN_TOK . exp4 RPAREN_TOK
   20 exp3: LPAREN_TOK . exp3 RPAREN_TOK
   35 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 33
    MINUS_TOK        shift, and go to state 34
    NOT_TOK          shift, and go to state 35
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp4  go to state 54
    exp3  go to state 55
    exp2  go to state 56
    exp0  go to state 43
    var   go to state 44


State 34

   36 exp2: MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 57
    exp0  go to state 43
    var   go to state 44


State 35

   18 exp4: NOT_TOK . exp4

    LPAREN_TOK       shift, and go to state 33
    MINUS_TOK        shift, and go to state 34
    NOT_TOK          shift, and go to state 35
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp4  go to state 58
    exp3  go to state 41
    exp2  go to state 42
    exp0  go to state 43
    var   go to state 44


State 36

   49 var: INTCONST .

    $default  reduce using rule 49 (var)


State 37

   50 var: DOUBLECONST .

    $default  reduce using rule 50 (var)


State 38

   51 var: CHARCONST .

    $default  reduce using rule 51 (var)


State 39

   44 exp0: ID_TOK . PLUS_PLUS_TOK
   45     | ID_TOK . MINUS_MINUS_TOK
   48 var: ID_TOK .

    MINUS_MINUS_TOK  shift, and go to state 26
    PLUS_PLUS_TOK    shift, and go to state 27

    $default  reduce using rule 48 (var)


State 40

   14 condexp: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 59


State 41

   16 exp4: exp3 . OR_TOK exp4
   17     | exp3 . AND_TOK exp4
   19     | exp3 .

    AND_TOK  shift, and go to state 60
    OR_TOK   shift, and go to state 61

    $default  reduce using rule 19 (exp4)


State 42

   21 exp3: exp2 . LT_TOK exp2
   22     | exp2 . GT_TOK exp2
   23     | exp2 . GTEQ_TOK exp2
   24     | exp2 . LTEQ_TOK exp2
   25     | exp2 . COMPARE_TOK exp2
   26     | exp2 . NOT_EQ_TOK exp2
   27     | exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    GT_TOK       shift, and go to state 62
    LT_TOK       shift, and go to state 63
    MINUS_TOK    shift, and go to state 64
    PLUS_TOK     shift, and go to state 65
    MULT_TOK     shift, and go to state 66
    DIVIDE_TOK   shift, and go to state 67
    MOD_TOK      shift, and go to state 68
    COMPARE_TOK  shift, and go to state 69
    GTEQ_TOK     shift, and go to state 70
    LTEQ_TOK     shift, and go to state 71
    NOT_EQ_TOK   shift, and go to state 72

    $default  reduce using rule 27 (exp3)


State 43

   42 exp2: exp0 .

    $default  reduce using rule 42 (exp2)


State 44

   43 exp2: var .

    $default  reduce using rule 43 (exp2)


State 45

   13 loopstatement: WHILE_TOK condexp nonfunctionblock .

    $default  reduce using rule 13 (loopstatement)


State 46

   10 ifstatement: IF_TOK condexp nonfunctionblock . ifstatementex
   11            | IF_TOK condexp nonfunctionblock . ifstatementex ELSE_TOK nonfunctionblock

    $default  reduce using rule 12 (ifstatementex)

    ifstatementex  go to state 73


State 47

   35 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 74
    exp0  go to state 43
    var   go to state 44


State 48

   28 exp: ID_TOK EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 28 (exp)


State 49

   29 exp: ID_TOK PLUS_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 29 (exp)


State 50

   30 exp: ID_TOK MINUS_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 30 (exp)


State 51

   31 exp: ID_TOK MULT_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 31 (exp)


State 52

   32 exp: ID_TOK DIVIDE_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 32 (exp)


State 53

   33 exp: ID_TOK MOD_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 33 (exp)


State 54

   15 exp4: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 75


State 55

   16 exp4: exp3 . OR_TOK exp4
   17     | exp3 . AND_TOK exp4
   19     | exp3 .
   20 exp3: LPAREN_TOK exp3 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 76
    AND_TOK     shift, and go to state 60
    OR_TOK      shift, and go to state 61

    RPAREN_TOK  [reduce using rule 19 (exp4)]


State 56

   21 exp3: exp2 . LT_TOK exp2
   22     | exp2 . GT_TOK exp2
   23     | exp2 . GTEQ_TOK exp2
   24     | exp2 . LTEQ_TOK exp2
   25     | exp2 . COMPARE_TOK exp2
   26     | exp2 . NOT_EQ_TOK exp2
   27     | exp2 .
   35 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   37     | exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    RPAREN_TOK   shift, and go to state 77
    GT_TOK       shift, and go to state 62
    LT_TOK       shift, and go to state 63
    MINUS_TOK    shift, and go to state 64
    PLUS_TOK     shift, and go to state 65
    MULT_TOK     shift, and go to state 66
    DIVIDE_TOK   shift, and go to state 67
    MOD_TOK      shift, and go to state 68
    COMPARE_TOK  shift, and go to state 69
    GTEQ_TOK     shift, and go to state 70
    LTEQ_TOK     shift, and go to state 71
    NOT_EQ_TOK   shift, and go to state 72

    RPAREN_TOK  [reduce using rule 27 (exp3)]
    $default    reduce using rule 27 (exp3)


State 57

   36 exp2: MINUS_TOK exp2 .
   37     | exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 68

    MOD_TOK   [reduce using rule 36 (exp2)]
    $default  reduce using rule 36 (exp2)


State 58

   18 exp4: NOT_TOK exp4 .

    $default  reduce using rule 18 (exp4)


State 59

   14 condexp: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 14 (condexp)


State 60

   17 exp4: exp3 AND_TOK . exp4

    LPAREN_TOK       shift, and go to state 33
    MINUS_TOK        shift, and go to state 34
    NOT_TOK          shift, and go to state 35
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp4  go to state 78
    exp3  go to state 41
    exp2  go to state 42
    exp0  go to state 43
    var   go to state 44


State 61

   16 exp4: exp3 OR_TOK . exp4

    LPAREN_TOK       shift, and go to state 33
    MINUS_TOK        shift, and go to state 34
    NOT_TOK          shift, and go to state 35
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp4  go to state 79
    exp3  go to state 41
    exp2  go to state 42
    exp0  go to state 43
    var   go to state 44


State 62

   22 exp3: exp2 GT_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 80
    exp0  go to state 43
    var   go to state 44


State 63

   21 exp3: exp2 LT_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 81
    exp0  go to state 43
    var   go to state 44


State 64

   38 exp2: exp2 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 82
    exp0  go to state 43
    var   go to state 44


State 65

   37 exp2: exp2 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 83
    exp0  go to state 43
    var   go to state 44


State 66

   39 exp2: exp2 MULT_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 84
    exp0  go to state 43
    var   go to state 44


State 67

   40 exp2: exp2 DIVIDE_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 85
    exp0  go to state 43
    var   go to state 44


State 68

   41 exp2: exp2 MOD_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 86
    exp0  go to state 43
    var   go to state 44


State 69

   25 exp3: exp2 COMPARE_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 87
    exp0  go to state 43
    var   go to state 44


State 70

   23 exp3: exp2 GTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 88
    exp0  go to state 43
    var   go to state 44


State 71

   24 exp3: exp2 LTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 89
    exp0  go to state 43
    var   go to state 44


State 72

   26 exp3: exp2 NOT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 47
    MINUS_TOK        shift, and go to state 34
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 36
    DOUBLECONST      shift, and go to state 37
    CHARCONST        shift, and go to state 38
    ID_TOK           shift, and go to state 39

    exp2  go to state 90
    exp0  go to state 43
    var   go to state 44


State 73

   10 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex .
   11            | IF_TOK condexp nonfunctionblock ifstatementex . ELSE_TOK nonfunctionblock

    ELSE_TOK  shift, and go to state 91

    ELSE_TOK  [reduce using rule 10 (ifstatement)]
    $default  reduce using rule 10 (ifstatement)


State 74

   35 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   37     | exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    RPAREN_TOK  shift, and go to state 77
    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68


State 75

   15 exp4: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 15 (exp4)


State 76

   20 exp3: LPAREN_TOK exp3 RPAREN_TOK .

    $default  reduce using rule 20 (exp3)


State 77

   35 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 35 (exp2)


State 78

   17 exp4: exp3 AND_TOK exp4 .

    $default  reduce using rule 17 (exp4)


State 79

   16 exp4: exp3 OR_TOK exp4 .

    $default  reduce using rule 16 (exp4)


State 80

   22 exp3: exp2 GT_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 22 (exp3)


State 81

   21 exp3: exp2 LT_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 21 (exp3)


State 82

   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   38     | exp2 MINUS_TOK exp2 .
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    MOD_TOK   [reduce using rule 38 (exp2)]
    $default  reduce using rule 38 (exp2)


State 83

   37 exp2: exp2 . PLUS_TOK exp2
   37     | exp2 PLUS_TOK exp2 .
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    MOD_TOK   [reduce using rule 37 (exp2)]
    $default  reduce using rule 37 (exp2)


State 84

   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   39     | exp2 MULT_TOK exp2 .
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 68

    MOD_TOK   [reduce using rule 39 (exp2)]
    $default  reduce using rule 39 (exp2)


State 85

   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   40     | exp2 DIVIDE_TOK exp2 .
   41     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 68

    MOD_TOK   [reduce using rule 40 (exp2)]
    $default  reduce using rule 40 (exp2)


State 86

   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2
   41     | exp2 MOD_TOK exp2 .

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    MINUS_TOK   [reduce using rule 41 (exp2)]
    PLUS_TOK    [reduce using rule 41 (exp2)]
    MULT_TOK    [reduce using rule 41 (exp2)]
    DIVIDE_TOK  [reduce using rule 41 (exp2)]
    MOD_TOK     [reduce using rule 41 (exp2)]
    $default    reduce using rule 41 (exp2)


State 87

   25 exp3: exp2 COMPARE_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 25 (exp3)


State 88

   23 exp3: exp2 GTEQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 23 (exp3)


State 89

   24 exp3: exp2 LTEQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 24 (exp3)


State 90

   26 exp3: exp2 NOT_EQ_TOK exp2 .
   37 exp2: exp2 . PLUS_TOK exp2
   38     | exp2 . MINUS_TOK exp2
   39     | exp2 . MULT_TOK exp2
   40     | exp2 . DIVIDE_TOK exp2
   41     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 64
    PLUS_TOK    shift, and go to state 65
    MULT_TOK    shift, and go to state 66
    DIVIDE_TOK  shift, and go to state 67
    MOD_TOK     shift, and go to state 68

    $default  reduce using rule 26 (exp3)


State 91

   11 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 1
    WHILE_TOK        shift, and go to state 2
    IF_TOK           shift, and go to state 3
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    nonfunctionblock  go to state 92
    statement         go to state 10
    ifstatement       go to state 11
    loopstatement     go to state 12
    exp               go to state 13
    exp0              go to state 14


State 92

   11 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock .

    $default  reduce using rule 11 (ifstatement)
