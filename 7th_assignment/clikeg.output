Terminals unused in grammar

   CURL_LPAREN_TOK
   CURL_RPAREN_TOK
   DEFINE_TOK
   XOR_TOK
   COLON_TOK
   COMMA_TOK
   SWITCH_TOK
   CASE_TOK
   DEFAULT_TOK
   WHILE_TOK
   FOR_TOK
   ELSEIF_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   ERROR_TOK
   RETURN_TOK
   TYPE_TOK


State 38 conflicts: 4 shift/reduce
State 47 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 5 shift/reduce
State 84 conflicts: 4 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: nonfunctionblock

    2 nonfunctionblock: nonfunctionblock statement
    3                 | statement

    4 statement: exp SEMICOLON_TOK
    5          | ifstatement

    6 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex
    7            | IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    8 ifstatementex: %empty

    9 condexp: LPAREN_TOK exp4 RPAREN_TOK

   10 exp4: LPAREN_TOK exp4 RPAREN_TOK
   11     | exp3 OR_TOK exp4
   12     | exp3 AND_TOK exp4
   13     | NOT_TOK exp4
   14     | exp3

   15 exp3: LPAREN_TOK exp3 RPAREN_TOK
   16     | exp2 LT_TOK exp2
   17     | exp2 GT_TOK exp2
   18     | exp2 GTEQ_TOK exp2
   19     | exp2 LTEQ_TOK exp2
   20     | exp2 COMPARE_TOK exp2
   21     | exp2 NOT_EQ_TOK exp2
   22     | exp2

   23 exp: ID_TOK EQ_TOK exp2
   24    | ID_TOK PLUS_EQ_TOK exp2
   25    | ID_TOK MINUS_EQ_TOK exp2
   26    | ID_TOK MULT_EQ_TOK exp2
   27    | ID_TOK DIVIDE_EQ_TOK exp2
   28    | ID_TOK MOD_EQ_TOK exp2
   29    | exp0

   30 exp2: LPAREN_TOK exp2 RPAREN_TOK
   31     | MINUS_TOK exp2
   32     | exp2 PLUS_TOK exp2
   33     | exp2 MINUS_TOK exp2
   34     | exp2 MULT_TOK exp2
   35     | exp2 DIVIDE_TOK exp2
   36     | exp2 MOD_TOK exp2
   37     | exp0
   38     | var

   39 exp0: ID_TOK PLUS_PLUS_TOK
   40     | ID_TOK MINUS_MINUS_TOK
   41     | PLUS_PLUS_TOK ID_TOK
   42     | MINUS_MINUS_TOK ID_TOK

   43 var: ID_TOK
   44    | INTCONST
   45    | DOUBLECONST
   46    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 9 10 15 30
RPAREN_TOK (259) 9 10 15 30
CURL_LPAREN_TOK (260)
CURL_RPAREN_TOK (261)
DEFINE_TOK (262)
EQ_TOK (263) 23
GT_TOK (264) 17
LT_TOK (265) 16
MINUS_TOK (266) 31 33
PLUS_TOK (267) 32
MULT_TOK (268) 34
DIVIDE_TOK (269) 35
MOD_TOK (270) 36
XOR_TOK (271)
NOT_TOK (272) 13
AND_TOK (273) 12
OR_TOK (274) 11
COLON_TOK (275)
SEMICOLON_TOK (276) 4
COMMA_TOK (277)
SWITCH_TOK (278)
CASE_TOK (279)
DEFAULT_TOK (280)
WHILE_TOK (281)
FOR_TOK (282)
IF_TOK (283) 6 7
ELSE_TOK (284) 7
ELSEIF_TOK (285)
COMPARE_TOK (286) 20
GTEQ_TOK (287) 18
LTEQ_TOK (288) 19
NOT_EQ_TOK (289) 21
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292) 24
MINUS_EQ_TOK (293) 25
MULT_EQ_TOK (294) 26
DIVIDE_EQ_TOK (295) 27
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 40 42
PLUS_PLUS_TOK (299) 39 41
MOD_EQ_TOK (300) 28
ERROR_TOK (301)
RETURN_TOK (302)
INTCONST (303) 44
TYPE_TOK (304)
DOUBLECONST (305) 45
CHARCONST (306) 46
ID_TOK (307) 23 24 25 26 27 28 39 40 41 42 43
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
DEBUG (55)
    on left: 1, on right: 0
nonfunctionblock (56)
    on left: 2 3, on right: 1 2 6 7
statement (57)
    on left: 4 5, on right: 2 3
ifstatement (58)
    on left: 6 7, on right: 5
ifstatementex (59)
    on left: 8, on right: 6 7
condexp (60)
    on left: 9, on right: 6 7
exp4 (61)
    on left: 10 11 12 13 14, on right: 9 10 11 12 13
exp3 (62)
    on left: 15 16 17 18 19 20 21 22, on right: 11 12 14 15
exp (63)
    on left: 23 24 25 26 27 28 29, on right: 4
exp2 (64)
    on left: 30 31 32 33 34 35 36 37 38, on right: 16 17 18 19 20 21
    22 23 24 25 26 27 28 30 31 32 33 34 35 36
exp0 (65)
    on left: 39 40 41 42, on right: 29 37
var (66)
    on left: 43 44 45 46, on right: 38


State 0

    0 $accept: . DEBUG $end

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    DEBUG             go to state 5
    nonfunctionblock  go to state 6
    statement         go to state 7
    ifstatement       go to state 8
    exp               go to state 9
    exp0              go to state 10


State 1

    6 ifstatement: IF_TOK . condexp nonfunctionblock ifstatementex
    7            | IF_TOK . condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 11

    condexp  go to state 12


State 2

   42 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 13


State 3

   41 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 14


State 4

   23 exp: ID_TOK . EQ_TOK exp2
   24    | ID_TOK . PLUS_EQ_TOK exp2
   25    | ID_TOK . MINUS_EQ_TOK exp2
   26    | ID_TOK . MULT_EQ_TOK exp2
   27    | ID_TOK . DIVIDE_EQ_TOK exp2
   28    | ID_TOK . MOD_EQ_TOK exp2
   39 exp0: ID_TOK . PLUS_PLUS_TOK
   40     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 15
    PLUS_EQ_TOK      shift, and go to state 16
    MINUS_EQ_TOK     shift, and go to state 17
    MULT_EQ_TOK      shift, and go to state 18
    DIVIDE_EQ_TOK    shift, and go to state 19
    MINUS_MINUS_TOK  shift, and go to state 20
    PLUS_PLUS_TOK    shift, and go to state 21
    MOD_EQ_TOK       shift, and go to state 22


State 5

    0 $accept: DEBUG . $end

    $end  shift, and go to state 23


State 6

    1 DEBUG: nonfunctionblock .
    2 nonfunctionblock: nonfunctionblock . statement

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    $default  reduce using rule 1 (DEBUG)

    statement    go to state 24
    ifstatement  go to state 8
    exp          go to state 9
    exp0         go to state 10


State 7

    3 nonfunctionblock: statement .

    $default  reduce using rule 3 (nonfunctionblock)


State 8

    5 statement: ifstatement .

    $default  reduce using rule 5 (statement)


State 9

    4 statement: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 25


State 10

   29 exp: exp0 .

    $default  reduce using rule 29 (exp)


State 11

    9 condexp: LPAREN_TOK . exp4 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 26
    MINUS_TOK        shift, and go to state 27
    NOT_TOK          shift, and go to state 28
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp4  go to state 33
    exp3  go to state 34
    exp2  go to state 35
    exp0  go to state 36
    var   go to state 37


State 12

    6 ifstatement: IF_TOK condexp . nonfunctionblock ifstatementex
    7            | IF_TOK condexp . nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    nonfunctionblock  go to state 38
    statement         go to state 7
    ifstatement       go to state 8
    exp               go to state 9
    exp0              go to state 10


State 13

   42 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 42 (exp0)


State 14

   41 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 41 (exp0)


State 15

   23 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 40
    exp0  go to state 36
    var   go to state 37


State 16

   24 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 41
    exp0  go to state 36
    var   go to state 37


State 17

   25 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 42
    exp0  go to state 36
    var   go to state 37


State 18

   26 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 43
    exp0  go to state 36
    var   go to state 37


State 19

   27 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 44
    exp0  go to state 36
    var   go to state 37


State 20

   40 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 40 (exp0)


State 21

   39 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 39 (exp0)


State 22

   28 exp: ID_TOK MOD_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 45
    exp0  go to state 36
    var   go to state 37


State 23

    0 $accept: DEBUG $end .

    $default  accept


State 24

    2 nonfunctionblock: nonfunctionblock statement .

    $default  reduce using rule 2 (nonfunctionblock)


State 25

    4 statement: exp SEMICOLON_TOK .

    $default  reduce using rule 4 (statement)


State 26

   10 exp4: LPAREN_TOK . exp4 RPAREN_TOK
   15 exp3: LPAREN_TOK . exp3 RPAREN_TOK
   30 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 26
    MINUS_TOK        shift, and go to state 27
    NOT_TOK          shift, and go to state 28
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp4  go to state 46
    exp3  go to state 47
    exp2  go to state 48
    exp0  go to state 36
    var   go to state 37


State 27

   31 exp2: MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 49
    exp0  go to state 36
    var   go to state 37


State 28

   13 exp4: NOT_TOK . exp4

    LPAREN_TOK       shift, and go to state 26
    MINUS_TOK        shift, and go to state 27
    NOT_TOK          shift, and go to state 28
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp4  go to state 50
    exp3  go to state 34
    exp2  go to state 35
    exp0  go to state 36
    var   go to state 37


State 29

   44 var: INTCONST .

    $default  reduce using rule 44 (var)


State 30

   45 var: DOUBLECONST .

    $default  reduce using rule 45 (var)


State 31

   46 var: CHARCONST .

    $default  reduce using rule 46 (var)


State 32

   39 exp0: ID_TOK . PLUS_PLUS_TOK
   40     | ID_TOK . MINUS_MINUS_TOK
   43 var: ID_TOK .

    MINUS_MINUS_TOK  shift, and go to state 20
    PLUS_PLUS_TOK    shift, and go to state 21

    $default  reduce using rule 43 (var)


State 33

    9 condexp: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 51


State 34

   11 exp4: exp3 . OR_TOK exp4
   12     | exp3 . AND_TOK exp4
   14     | exp3 .

    AND_TOK  shift, and go to state 52
    OR_TOK   shift, and go to state 53

    $default  reduce using rule 14 (exp4)


State 35

   16 exp3: exp2 . LT_TOK exp2
   17     | exp2 . GT_TOK exp2
   18     | exp2 . GTEQ_TOK exp2
   19     | exp2 . LTEQ_TOK exp2
   20     | exp2 . COMPARE_TOK exp2
   21     | exp2 . NOT_EQ_TOK exp2
   22     | exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    GT_TOK       shift, and go to state 54
    LT_TOK       shift, and go to state 55
    MINUS_TOK    shift, and go to state 56
    PLUS_TOK     shift, and go to state 57
    MULT_TOK     shift, and go to state 58
    DIVIDE_TOK   shift, and go to state 59
    MOD_TOK      shift, and go to state 60
    COMPARE_TOK  shift, and go to state 61
    GTEQ_TOK     shift, and go to state 62
    LTEQ_TOK     shift, and go to state 63
    NOT_EQ_TOK   shift, and go to state 64

    $default  reduce using rule 22 (exp3)


State 36

   37 exp2: exp0 .

    $default  reduce using rule 37 (exp2)


State 37

   38 exp2: var .

    $default  reduce using rule 38 (exp2)


State 38

    2 nonfunctionblock: nonfunctionblock . statement
    6 ifstatement: IF_TOK condexp nonfunctionblock . ifstatementex
    7            | IF_TOK condexp nonfunctionblock . ifstatementex ELSE_TOK nonfunctionblock

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    IF_TOK           [reduce using rule 8 (ifstatementex)]
    MINUS_MINUS_TOK  [reduce using rule 8 (ifstatementex)]
    PLUS_PLUS_TOK    [reduce using rule 8 (ifstatementex)]
    ID_TOK           [reduce using rule 8 (ifstatementex)]
    $default         reduce using rule 8 (ifstatementex)

    statement      go to state 24
    ifstatement    go to state 8
    ifstatementex  go to state 65
    exp            go to state 9
    exp0           go to state 10


State 39

   30 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 66
    exp0  go to state 36
    var   go to state 37


State 40

   23 exp: ID_TOK EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 23 (exp)


State 41

   24 exp: ID_TOK PLUS_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 24 (exp)


State 42

   25 exp: ID_TOK MINUS_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 25 (exp)


State 43

   26 exp: ID_TOK MULT_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 26 (exp)


State 44

   27 exp: ID_TOK DIVIDE_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 27 (exp)


State 45

   28 exp: ID_TOK MOD_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 28 (exp)


State 46

   10 exp4: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 67


State 47

   11 exp4: exp3 . OR_TOK exp4
   12     | exp3 . AND_TOK exp4
   14     | exp3 .
   15 exp3: LPAREN_TOK exp3 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 68
    AND_TOK     shift, and go to state 52
    OR_TOK      shift, and go to state 53

    RPAREN_TOK  [reduce using rule 14 (exp4)]


State 48

   16 exp3: exp2 . LT_TOK exp2
   17     | exp2 . GT_TOK exp2
   18     | exp2 . GTEQ_TOK exp2
   19     | exp2 . LTEQ_TOK exp2
   20     | exp2 . COMPARE_TOK exp2
   21     | exp2 . NOT_EQ_TOK exp2
   22     | exp2 .
   30 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   32     | exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    RPAREN_TOK   shift, and go to state 69
    GT_TOK       shift, and go to state 54
    LT_TOK       shift, and go to state 55
    MINUS_TOK    shift, and go to state 56
    PLUS_TOK     shift, and go to state 57
    MULT_TOK     shift, and go to state 58
    DIVIDE_TOK   shift, and go to state 59
    MOD_TOK      shift, and go to state 60
    COMPARE_TOK  shift, and go to state 61
    GTEQ_TOK     shift, and go to state 62
    LTEQ_TOK     shift, and go to state 63
    NOT_EQ_TOK   shift, and go to state 64

    RPAREN_TOK  [reduce using rule 22 (exp3)]
    $default    reduce using rule 22 (exp3)


State 49

   31 exp2: MINUS_TOK exp2 .
   32     | exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 60

    MOD_TOK   [reduce using rule 31 (exp2)]
    $default  reduce using rule 31 (exp2)


State 50

   13 exp4: NOT_TOK exp4 .

    $default  reduce using rule 13 (exp4)


State 51

    9 condexp: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 9 (condexp)


State 52

   12 exp4: exp3 AND_TOK . exp4

    LPAREN_TOK       shift, and go to state 26
    MINUS_TOK        shift, and go to state 27
    NOT_TOK          shift, and go to state 28
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp4  go to state 70
    exp3  go to state 34
    exp2  go to state 35
    exp0  go to state 36
    var   go to state 37


State 53

   11 exp4: exp3 OR_TOK . exp4

    LPAREN_TOK       shift, and go to state 26
    MINUS_TOK        shift, and go to state 27
    NOT_TOK          shift, and go to state 28
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp4  go to state 71
    exp3  go to state 34
    exp2  go to state 35
    exp0  go to state 36
    var   go to state 37


State 54

   17 exp3: exp2 GT_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 72
    exp0  go to state 36
    var   go to state 37


State 55

   16 exp3: exp2 LT_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 73
    exp0  go to state 36
    var   go to state 37


State 56

   33 exp2: exp2 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 74
    exp0  go to state 36
    var   go to state 37


State 57

   32 exp2: exp2 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 75
    exp0  go to state 36
    var   go to state 37


State 58

   34 exp2: exp2 MULT_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 76
    exp0  go to state 36
    var   go to state 37


State 59

   35 exp2: exp2 DIVIDE_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 77
    exp0  go to state 36
    var   go to state 37


State 60

   36 exp2: exp2 MOD_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 78
    exp0  go to state 36
    var   go to state 37


State 61

   20 exp3: exp2 COMPARE_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 79
    exp0  go to state 36
    var   go to state 37


State 62

   18 exp3: exp2 GTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 80
    exp0  go to state 36
    var   go to state 37


State 63

   19 exp3: exp2 LTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 81
    exp0  go to state 36
    var   go to state 37


State 64

   21 exp3: exp2 NOT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 39
    MINUS_TOK        shift, and go to state 27
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 29
    DOUBLECONST      shift, and go to state 30
    CHARCONST        shift, and go to state 31
    ID_TOK           shift, and go to state 32

    exp2  go to state 82
    exp0  go to state 36
    var   go to state 37


State 65

    6 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex .
    7            | IF_TOK condexp nonfunctionblock ifstatementex . ELSE_TOK nonfunctionblock

    ELSE_TOK  shift, and go to state 83

    ELSE_TOK  [reduce using rule 6 (ifstatement)]
    $default  reduce using rule 6 (ifstatement)


State 66

   30 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   32     | exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    RPAREN_TOK  shift, and go to state 69
    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60


State 67

   10 exp4: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 10 (exp4)


State 68

   15 exp3: LPAREN_TOK exp3 RPAREN_TOK .

    $default  reduce using rule 15 (exp3)


State 69

   30 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 30 (exp2)


State 70

   12 exp4: exp3 AND_TOK exp4 .

    $default  reduce using rule 12 (exp4)


State 71

   11 exp4: exp3 OR_TOK exp4 .

    $default  reduce using rule 11 (exp4)


State 72

   17 exp3: exp2 GT_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 17 (exp3)


State 73

   16 exp3: exp2 LT_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 16 (exp3)


State 74

   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   33     | exp2 MINUS_TOK exp2 .
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    MOD_TOK   [reduce using rule 33 (exp2)]
    $default  reduce using rule 33 (exp2)


State 75

   32 exp2: exp2 . PLUS_TOK exp2
   32     | exp2 PLUS_TOK exp2 .
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    MOD_TOK   [reduce using rule 32 (exp2)]
    $default  reduce using rule 32 (exp2)


State 76

   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   34     | exp2 MULT_TOK exp2 .
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 60

    MOD_TOK   [reduce using rule 34 (exp2)]
    $default  reduce using rule 34 (exp2)


State 77

   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   35     | exp2 DIVIDE_TOK exp2 .
   36     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 60

    MOD_TOK   [reduce using rule 35 (exp2)]
    $default  reduce using rule 35 (exp2)


State 78

   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2
   36     | exp2 MOD_TOK exp2 .

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    MINUS_TOK   [reduce using rule 36 (exp2)]
    PLUS_TOK    [reduce using rule 36 (exp2)]
    MULT_TOK    [reduce using rule 36 (exp2)]
    DIVIDE_TOK  [reduce using rule 36 (exp2)]
    MOD_TOK     [reduce using rule 36 (exp2)]
    $default    reduce using rule 36 (exp2)


State 79

   20 exp3: exp2 COMPARE_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 20 (exp3)


State 80

   18 exp3: exp2 GTEQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 18 (exp3)


State 81

   19 exp3: exp2 LTEQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 19 (exp3)


State 82

   21 exp3: exp2 NOT_EQ_TOK exp2 .
   32 exp2: exp2 . PLUS_TOK exp2
   33     | exp2 . MINUS_TOK exp2
   34     | exp2 . MULT_TOK exp2
   35     | exp2 . DIVIDE_TOK exp2
   36     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 56
    PLUS_TOK    shift, and go to state 57
    MULT_TOK    shift, and go to state 58
    DIVIDE_TOK  shift, and go to state 59
    MOD_TOK     shift, and go to state 60

    $default  reduce using rule 21 (exp3)


State 83

    7 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK . nonfunctionblock

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    nonfunctionblock  go to state 84
    statement         go to state 7
    ifstatement       go to state 8
    exp               go to state 9
    exp0              go to state 10


State 84

    2 nonfunctionblock: nonfunctionblock . statement
    7 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock .

    IF_TOK           shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    ID_TOK           shift, and go to state 4

    IF_TOK           [reduce using rule 7 (ifstatement)]
    MINUS_MINUS_TOK  [reduce using rule 7 (ifstatement)]
    PLUS_PLUS_TOK    [reduce using rule 7 (ifstatement)]
    ID_TOK           [reduce using rule 7 (ifstatement)]
    $default         reduce using rule 7 (ifstatement)

    statement    go to state 24
    ifstatement  go to state 8
    exp          go to state 9
    exp0         go to state 10
