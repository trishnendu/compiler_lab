Terminals unused in grammar

   CURL_LPAREN_TOK
   CURL_RPAREN_TOK
   DEFINE_TOK
   XOR_TOK
   COLON_TOK
   COMMA_TOK
   SWITCH_TOK
   CASE_TOK
   DEFAULT_TOK
   FOR_TOK
   ELSEIF_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   ERROR_TOK
   RETURN_TOK
   TYPE_TOK


State 41 conflicts: 5 shift/reduce
State 42 conflicts: 5 shift/reduce
State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 5 shift/reduce
State 88 conflicts: 5 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: nonfunctionblock

    2 nonfunctionblock: nonfunctionblock statement
    3                 | statement

    4 statement: exp SEMICOLON_TOK
    5          | ifstatement
    6          | loopstatement

    7 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex
    8            | IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    9 ifstatementex: %empty

   10 loopstatement: WHILE_TOK condexp nonfunctionblock

   11 condexp: LPAREN_TOK exp4 RPAREN_TOK

   12 exp4: LPAREN_TOK exp4 RPAREN_TOK
   13     | exp3 OR_TOK exp4
   14     | exp3 AND_TOK exp4
   15     | NOT_TOK exp4
   16     | exp3

   17 exp3: LPAREN_TOK exp3 RPAREN_TOK
   18     | exp2 LT_TOK exp2
   19     | exp2 GT_TOK exp2
   20     | exp2 GTEQ_TOK exp2
   21     | exp2 LTEQ_TOK exp2
   22     | exp2 COMPARE_TOK exp2
   23     | exp2 NOT_EQ_TOK exp2
   24     | exp2

   25 exp: ID_TOK EQ_TOK exp2
   26    | ID_TOK PLUS_EQ_TOK exp2
   27    | ID_TOK MINUS_EQ_TOK exp2
   28    | ID_TOK MULT_EQ_TOK exp2
   29    | ID_TOK DIVIDE_EQ_TOK exp2
   30    | ID_TOK MOD_EQ_TOK exp2
   31    | exp0

   32 exp2: LPAREN_TOK exp2 RPAREN_TOK
   33     | MINUS_TOK exp2
   34     | exp2 PLUS_TOK exp2
   35     | exp2 MINUS_TOK exp2
   36     | exp2 MULT_TOK exp2
   37     | exp2 DIVIDE_TOK exp2
   38     | exp2 MOD_TOK exp2
   39     | exp0
   40     | var

   41 exp0: ID_TOK PLUS_PLUS_TOK
   42     | ID_TOK MINUS_MINUS_TOK
   43     | PLUS_PLUS_TOK ID_TOK
   44     | MINUS_MINUS_TOK ID_TOK

   45 var: ID_TOK
   46    | INTCONST
   47    | DOUBLECONST
   48    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 11 12 17 32
RPAREN_TOK (259) 11 12 17 32
CURL_LPAREN_TOK (260)
CURL_RPAREN_TOK (261)
DEFINE_TOK (262)
EQ_TOK (263) 25
GT_TOK (264) 19
LT_TOK (265) 18
MINUS_TOK (266) 33 35
PLUS_TOK (267) 34
MULT_TOK (268) 36
DIVIDE_TOK (269) 37
MOD_TOK (270) 38
XOR_TOK (271)
NOT_TOK (272) 15
AND_TOK (273) 14
OR_TOK (274) 13
COLON_TOK (275)
SEMICOLON_TOK (276) 4
COMMA_TOK (277)
SWITCH_TOK (278)
CASE_TOK (279)
DEFAULT_TOK (280)
WHILE_TOK (281) 10
FOR_TOK (282)
IF_TOK (283) 7 8
ELSE_TOK (284) 8
ELSEIF_TOK (285)
COMPARE_TOK (286) 22
GTEQ_TOK (287) 20
LTEQ_TOK (288) 21
NOT_EQ_TOK (289) 23
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292) 26
MINUS_EQ_TOK (293) 27
MULT_EQ_TOK (294) 28
DIVIDE_EQ_TOK (295) 29
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 42 44
PLUS_PLUS_TOK (299) 41 43
MOD_EQ_TOK (300) 30
ERROR_TOK (301)
RETURN_TOK (302)
INTCONST (303) 46
TYPE_TOK (304)
DOUBLECONST (305) 47
CHARCONST (306) 48
ID_TOK (307) 25 26 27 28 29 30 41 42 43 44 45
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
DEBUG (55)
    on left: 1, on right: 0
nonfunctionblock (56)
    on left: 2 3, on right: 1 2 7 8 10
statement (57)
    on left: 4 5 6, on right: 2 3
ifstatement (58)
    on left: 7 8, on right: 5
ifstatementex (59)
    on left: 9, on right: 7 8
loopstatement (60)
    on left: 10, on right: 6
condexp (61)
    on left: 11, on right: 7 8 10
exp4 (62)
    on left: 12 13 14 15 16, on right: 11 12 13 14 15
exp3 (63)
    on left: 17 18 19 20 21 22 23 24, on right: 13 14 16 17
exp (64)
    on left: 25 26 27 28 29 30 31, on right: 4
exp2 (65)
    on left: 32 33 34 35 36 37 38 39 40, on right: 18 19 20 21 22 23
    24 25 26 27 28 29 30 32 33 34 35 36 37 38
exp0 (66)
    on left: 41 42 43 44, on right: 31 39
var (67)
    on left: 45 46 47 48, on right: 40


State 0

    0 $accept: . DEBUG $end

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    DEBUG             go to state 6
    nonfunctionblock  go to state 7
    statement         go to state 8
    ifstatement       go to state 9
    loopstatement     go to state 10
    exp               go to state 11
    exp0              go to state 12


State 1

   10 loopstatement: WHILE_TOK . condexp nonfunctionblock

    LPAREN_TOK  shift, and go to state 13

    condexp  go to state 14


State 2

    7 ifstatement: IF_TOK . condexp nonfunctionblock ifstatementex
    8            | IF_TOK . condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 13

    condexp  go to state 15


State 3

   44 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 16


State 4

   43 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 17


State 5

   25 exp: ID_TOK . EQ_TOK exp2
   26    | ID_TOK . PLUS_EQ_TOK exp2
   27    | ID_TOK . MINUS_EQ_TOK exp2
   28    | ID_TOK . MULT_EQ_TOK exp2
   29    | ID_TOK . DIVIDE_EQ_TOK exp2
   30    | ID_TOK . MOD_EQ_TOK exp2
   41 exp0: ID_TOK . PLUS_PLUS_TOK
   42     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 18
    PLUS_EQ_TOK      shift, and go to state 19
    MINUS_EQ_TOK     shift, and go to state 20
    MULT_EQ_TOK      shift, and go to state 21
    DIVIDE_EQ_TOK    shift, and go to state 22
    MINUS_MINUS_TOK  shift, and go to state 23
    PLUS_PLUS_TOK    shift, and go to state 24
    MOD_EQ_TOK       shift, and go to state 25


State 6

    0 $accept: DEBUG . $end

    $end  shift, and go to state 26


State 7

    1 DEBUG: nonfunctionblock .
    2 nonfunctionblock: nonfunctionblock . statement

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    $default  reduce using rule 1 (DEBUG)

    statement      go to state 27
    ifstatement    go to state 9
    loopstatement  go to state 10
    exp            go to state 11
    exp0           go to state 12


State 8

    3 nonfunctionblock: statement .

    $default  reduce using rule 3 (nonfunctionblock)


State 9

    5 statement: ifstatement .

    $default  reduce using rule 5 (statement)


State 10

    6 statement: loopstatement .

    $default  reduce using rule 6 (statement)


State 11

    4 statement: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 28


State 12

   31 exp: exp0 .

    $default  reduce using rule 31 (exp)


State 13

   11 condexp: LPAREN_TOK . exp4 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 29
    MINUS_TOK        shift, and go to state 30
    NOT_TOK          shift, and go to state 31
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp4  go to state 36
    exp3  go to state 37
    exp2  go to state 38
    exp0  go to state 39
    var   go to state 40


State 14

   10 loopstatement: WHILE_TOK condexp . nonfunctionblock

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    nonfunctionblock  go to state 41
    statement         go to state 8
    ifstatement       go to state 9
    loopstatement     go to state 10
    exp               go to state 11
    exp0              go to state 12


State 15

    7 ifstatement: IF_TOK condexp . nonfunctionblock ifstatementex
    8            | IF_TOK condexp . nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    nonfunctionblock  go to state 42
    statement         go to state 8
    ifstatement       go to state 9
    loopstatement     go to state 10
    exp               go to state 11
    exp0              go to state 12


State 16

   44 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 44 (exp0)


State 17

   43 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 43 (exp0)


State 18

   25 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 44
    exp0  go to state 39
    var   go to state 40


State 19

   26 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 45
    exp0  go to state 39
    var   go to state 40


State 20

   27 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 46
    exp0  go to state 39
    var   go to state 40


State 21

   28 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 47
    exp0  go to state 39
    var   go to state 40


State 22

   29 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 48
    exp0  go to state 39
    var   go to state 40


State 23

   42 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 42 (exp0)


State 24

   41 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 41 (exp0)


State 25

   30 exp: ID_TOK MOD_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 49
    exp0  go to state 39
    var   go to state 40


State 26

    0 $accept: DEBUG $end .

    $default  accept


State 27

    2 nonfunctionblock: nonfunctionblock statement .

    $default  reduce using rule 2 (nonfunctionblock)


State 28

    4 statement: exp SEMICOLON_TOK .

    $default  reduce using rule 4 (statement)


State 29

   12 exp4: LPAREN_TOK . exp4 RPAREN_TOK
   17 exp3: LPAREN_TOK . exp3 RPAREN_TOK
   32 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 29
    MINUS_TOK        shift, and go to state 30
    NOT_TOK          shift, and go to state 31
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp4  go to state 50
    exp3  go to state 51
    exp2  go to state 52
    exp0  go to state 39
    var   go to state 40


State 30

   33 exp2: MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 53
    exp0  go to state 39
    var   go to state 40


State 31

   15 exp4: NOT_TOK . exp4

    LPAREN_TOK       shift, and go to state 29
    MINUS_TOK        shift, and go to state 30
    NOT_TOK          shift, and go to state 31
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp4  go to state 54
    exp3  go to state 37
    exp2  go to state 38
    exp0  go to state 39
    var   go to state 40


State 32

   46 var: INTCONST .

    $default  reduce using rule 46 (var)


State 33

   47 var: DOUBLECONST .

    $default  reduce using rule 47 (var)


State 34

   48 var: CHARCONST .

    $default  reduce using rule 48 (var)


State 35

   41 exp0: ID_TOK . PLUS_PLUS_TOK
   42     | ID_TOK . MINUS_MINUS_TOK
   45 var: ID_TOK .

    MINUS_MINUS_TOK  shift, and go to state 23
    PLUS_PLUS_TOK    shift, and go to state 24

    $default  reduce using rule 45 (var)


State 36

   11 condexp: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 55


State 37

   13 exp4: exp3 . OR_TOK exp4
   14     | exp3 . AND_TOK exp4
   16     | exp3 .

    AND_TOK  shift, and go to state 56
    OR_TOK   shift, and go to state 57

    $default  reduce using rule 16 (exp4)


State 38

   18 exp3: exp2 . LT_TOK exp2
   19     | exp2 . GT_TOK exp2
   20     | exp2 . GTEQ_TOK exp2
   21     | exp2 . LTEQ_TOK exp2
   22     | exp2 . COMPARE_TOK exp2
   23     | exp2 . NOT_EQ_TOK exp2
   24     | exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    GT_TOK       shift, and go to state 58
    LT_TOK       shift, and go to state 59
    MINUS_TOK    shift, and go to state 60
    PLUS_TOK     shift, and go to state 61
    MULT_TOK     shift, and go to state 62
    DIVIDE_TOK   shift, and go to state 63
    MOD_TOK      shift, and go to state 64
    COMPARE_TOK  shift, and go to state 65
    GTEQ_TOK     shift, and go to state 66
    LTEQ_TOK     shift, and go to state 67
    NOT_EQ_TOK   shift, and go to state 68

    $default  reduce using rule 24 (exp3)


State 39

   39 exp2: exp0 .

    $default  reduce using rule 39 (exp2)


State 40

   40 exp2: var .

    $default  reduce using rule 40 (exp2)


State 41

    2 nonfunctionblock: nonfunctionblock . statement
   10 loopstatement: WHILE_TOK condexp nonfunctionblock .

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    WHILE_TOK        [reduce using rule 10 (loopstatement)]
    IF_TOK           [reduce using rule 10 (loopstatement)]
    MINUS_MINUS_TOK  [reduce using rule 10 (loopstatement)]
    PLUS_PLUS_TOK    [reduce using rule 10 (loopstatement)]
    ID_TOK           [reduce using rule 10 (loopstatement)]
    $default         reduce using rule 10 (loopstatement)

    statement      go to state 27
    ifstatement    go to state 9
    loopstatement  go to state 10
    exp            go to state 11
    exp0           go to state 12


State 42

    2 nonfunctionblock: nonfunctionblock . statement
    7 ifstatement: IF_TOK condexp nonfunctionblock . ifstatementex
    8            | IF_TOK condexp nonfunctionblock . ifstatementex ELSE_TOK nonfunctionblock

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    WHILE_TOK        [reduce using rule 9 (ifstatementex)]
    IF_TOK           [reduce using rule 9 (ifstatementex)]
    MINUS_MINUS_TOK  [reduce using rule 9 (ifstatementex)]
    PLUS_PLUS_TOK    [reduce using rule 9 (ifstatementex)]
    ID_TOK           [reduce using rule 9 (ifstatementex)]
    $default         reduce using rule 9 (ifstatementex)

    statement      go to state 27
    ifstatement    go to state 9
    ifstatementex  go to state 69
    loopstatement  go to state 10
    exp            go to state 11
    exp0           go to state 12


State 43

   32 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 70
    exp0  go to state 39
    var   go to state 40


State 44

   25 exp: ID_TOK EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 25 (exp)


State 45

   26 exp: ID_TOK PLUS_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 26 (exp)


State 46

   27 exp: ID_TOK MINUS_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 27 (exp)


State 47

   28 exp: ID_TOK MULT_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 28 (exp)


State 48

   29 exp: ID_TOK DIVIDE_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 29 (exp)


State 49

   30 exp: ID_TOK MOD_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 30 (exp)


State 50

   12 exp4: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 71


State 51

   13 exp4: exp3 . OR_TOK exp4
   14     | exp3 . AND_TOK exp4
   16     | exp3 .
   17 exp3: LPAREN_TOK exp3 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 72
    AND_TOK     shift, and go to state 56
    OR_TOK      shift, and go to state 57

    RPAREN_TOK  [reduce using rule 16 (exp4)]


State 52

   18 exp3: exp2 . LT_TOK exp2
   19     | exp2 . GT_TOK exp2
   20     | exp2 . GTEQ_TOK exp2
   21     | exp2 . LTEQ_TOK exp2
   22     | exp2 . COMPARE_TOK exp2
   23     | exp2 . NOT_EQ_TOK exp2
   24     | exp2 .
   32 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   34     | exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    RPAREN_TOK   shift, and go to state 73
    GT_TOK       shift, and go to state 58
    LT_TOK       shift, and go to state 59
    MINUS_TOK    shift, and go to state 60
    PLUS_TOK     shift, and go to state 61
    MULT_TOK     shift, and go to state 62
    DIVIDE_TOK   shift, and go to state 63
    MOD_TOK      shift, and go to state 64
    COMPARE_TOK  shift, and go to state 65
    GTEQ_TOK     shift, and go to state 66
    LTEQ_TOK     shift, and go to state 67
    NOT_EQ_TOK   shift, and go to state 68

    RPAREN_TOK  [reduce using rule 24 (exp3)]
    $default    reduce using rule 24 (exp3)


State 53

   33 exp2: MINUS_TOK exp2 .
   34     | exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 64

    MOD_TOK   [reduce using rule 33 (exp2)]
    $default  reduce using rule 33 (exp2)


State 54

   15 exp4: NOT_TOK exp4 .

    $default  reduce using rule 15 (exp4)


State 55

   11 condexp: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 11 (condexp)


State 56

   14 exp4: exp3 AND_TOK . exp4

    LPAREN_TOK       shift, and go to state 29
    MINUS_TOK        shift, and go to state 30
    NOT_TOK          shift, and go to state 31
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp4  go to state 74
    exp3  go to state 37
    exp2  go to state 38
    exp0  go to state 39
    var   go to state 40


State 57

   13 exp4: exp3 OR_TOK . exp4

    LPAREN_TOK       shift, and go to state 29
    MINUS_TOK        shift, and go to state 30
    NOT_TOK          shift, and go to state 31
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp4  go to state 75
    exp3  go to state 37
    exp2  go to state 38
    exp0  go to state 39
    var   go to state 40


State 58

   19 exp3: exp2 GT_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 76
    exp0  go to state 39
    var   go to state 40


State 59

   18 exp3: exp2 LT_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 77
    exp0  go to state 39
    var   go to state 40


State 60

   35 exp2: exp2 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 78
    exp0  go to state 39
    var   go to state 40


State 61

   34 exp2: exp2 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 79
    exp0  go to state 39
    var   go to state 40


State 62

   36 exp2: exp2 MULT_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 80
    exp0  go to state 39
    var   go to state 40


State 63

   37 exp2: exp2 DIVIDE_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 81
    exp0  go to state 39
    var   go to state 40


State 64

   38 exp2: exp2 MOD_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 82
    exp0  go to state 39
    var   go to state 40


State 65

   22 exp3: exp2 COMPARE_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 83
    exp0  go to state 39
    var   go to state 40


State 66

   20 exp3: exp2 GTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 84
    exp0  go to state 39
    var   go to state 40


State 67

   21 exp3: exp2 LTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 85
    exp0  go to state 39
    var   go to state 40


State 68

   23 exp3: exp2 NOT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 43
    MINUS_TOK        shift, and go to state 30
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    INTCONST         shift, and go to state 32
    DOUBLECONST      shift, and go to state 33
    CHARCONST        shift, and go to state 34
    ID_TOK           shift, and go to state 35

    exp2  go to state 86
    exp0  go to state 39
    var   go to state 40


State 69

    7 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex .
    8            | IF_TOK condexp nonfunctionblock ifstatementex . ELSE_TOK nonfunctionblock

    ELSE_TOK  shift, and go to state 87

    ELSE_TOK  [reduce using rule 7 (ifstatement)]
    $default  reduce using rule 7 (ifstatement)


State 70

   32 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   34     | exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    RPAREN_TOK  shift, and go to state 73
    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64


State 71

   12 exp4: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 12 (exp4)


State 72

   17 exp3: LPAREN_TOK exp3 RPAREN_TOK .

    $default  reduce using rule 17 (exp3)


State 73

   32 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 32 (exp2)


State 74

   14 exp4: exp3 AND_TOK exp4 .

    $default  reduce using rule 14 (exp4)


State 75

   13 exp4: exp3 OR_TOK exp4 .

    $default  reduce using rule 13 (exp4)


State 76

   19 exp3: exp2 GT_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 19 (exp3)


State 77

   18 exp3: exp2 LT_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 18 (exp3)


State 78

   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   35     | exp2 MINUS_TOK exp2 .
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    MOD_TOK   [reduce using rule 35 (exp2)]
    $default  reduce using rule 35 (exp2)


State 79

   34 exp2: exp2 . PLUS_TOK exp2
   34     | exp2 PLUS_TOK exp2 .
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    MOD_TOK   [reduce using rule 34 (exp2)]
    $default  reduce using rule 34 (exp2)


State 80

   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   36     | exp2 MULT_TOK exp2 .
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 64

    MOD_TOK   [reduce using rule 36 (exp2)]
    $default  reduce using rule 36 (exp2)


State 81

   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   37     | exp2 DIVIDE_TOK exp2 .
   38     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 64

    MOD_TOK   [reduce using rule 37 (exp2)]
    $default  reduce using rule 37 (exp2)


State 82

   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2
   38     | exp2 MOD_TOK exp2 .

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    MINUS_TOK   [reduce using rule 38 (exp2)]
    PLUS_TOK    [reduce using rule 38 (exp2)]
    MULT_TOK    [reduce using rule 38 (exp2)]
    DIVIDE_TOK  [reduce using rule 38 (exp2)]
    MOD_TOK     [reduce using rule 38 (exp2)]
    $default    reduce using rule 38 (exp2)


State 83

   22 exp3: exp2 COMPARE_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 22 (exp3)


State 84

   20 exp3: exp2 GTEQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 20 (exp3)


State 85

   21 exp3: exp2 LTEQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 21 (exp3)


State 86

   23 exp3: exp2 NOT_EQ_TOK exp2 .
   34 exp2: exp2 . PLUS_TOK exp2
   35     | exp2 . MINUS_TOK exp2
   36     | exp2 . MULT_TOK exp2
   37     | exp2 . DIVIDE_TOK exp2
   38     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 60
    PLUS_TOK    shift, and go to state 61
    MULT_TOK    shift, and go to state 62
    DIVIDE_TOK  shift, and go to state 63
    MOD_TOK     shift, and go to state 64

    $default  reduce using rule 23 (exp3)


State 87

    8 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK . nonfunctionblock

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    nonfunctionblock  go to state 88
    statement         go to state 8
    ifstatement       go to state 9
    loopstatement     go to state 10
    exp               go to state 11
    exp0              go to state 12


State 88

    2 nonfunctionblock: nonfunctionblock . statement
    8 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock .

    WHILE_TOK        shift, and go to state 1
    IF_TOK           shift, and go to state 2
    MINUS_MINUS_TOK  shift, and go to state 3
    PLUS_PLUS_TOK    shift, and go to state 4
    ID_TOK           shift, and go to state 5

    WHILE_TOK        [reduce using rule 8 (ifstatement)]
    IF_TOK           [reduce using rule 8 (ifstatement)]
    MINUS_MINUS_TOK  [reduce using rule 8 (ifstatement)]
    PLUS_PLUS_TOK    [reduce using rule 8 (ifstatement)]
    ID_TOK           [reduce using rule 8 (ifstatement)]
    $default         reduce using rule 8 (ifstatement)

    statement      go to state 27
    ifstatement    go to state 9
    loopstatement  go to state 10
    exp            go to state 11
    exp0           go to state 12
