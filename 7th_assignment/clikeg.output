Terminals unused in grammar

   CURL_LPAREN_TOK
   CURL_RPAREN_TOK
   DEFINE_TOK
   EQ_TOK
   GT_TOK
   LT_TOK
   XOR_TOK
   NOT_TOK
   AND_TOK
   OR_TOK
   COLON_TOK
   SEMICOLON_TOK
   COMMA_TOK
   SWITCH_TOK
   CASE_TOK
   DEFAULT_TOK
   WHILE_TOK
   FOR_TOK
   IF_TOK
   ELSE_TOK
   ELSEIF_TOK
   COMPARE_TOK
   GTEQ_TOK
   LTEQ_TOK
   NOT_EQ_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   PLUS_EQ_TOK
   MINUS_EQ_TOK
   MULT_EQ_TOK
   DIVIDE_EQ_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   MOD_EQ_TOK
   ERROR_TOK
   RETURN_TOK
   TYPE_TOK
   UMINUS


State 7 conflicts: 2 shift/reduce
State 25 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 27 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 29 conflicts: 5 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: DEBUG exp2
    2      | exp2

    3 exp2: LPAREN_TOK exp2 RPAREN_TOK
    4     | exp2 PLUS_TOK exp2
    5     | exp2 MINUS_TOK exp2
    6     | exp2 MULT_TOK exp2
    7     | exp2 DIVIDE_TOK exp2
    8     | exp2 MOD_TOK exp2
    9     | exp0
   10     | var

   11 exp0: ID_TOK PLUS_PLUS_TOK
   12     | ID_TOK MINUS_MINUS_TOK
   13     | PLUS_PLUS_TOK ID_TOK
   14     | MINUS_MINUS_TOK ID_TOK

   15 var: ID_TOK
   16    | INTCONST
   17    | DOUBLECONST
   18    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 3
RPAREN_TOK (259) 3
CURL_LPAREN_TOK (260)
CURL_RPAREN_TOK (261)
DEFINE_TOK (262)
EQ_TOK (263)
GT_TOK (264)
LT_TOK (265)
MINUS_TOK (266) 5
PLUS_TOK (267) 4
MULT_TOK (268) 6
DIVIDE_TOK (269) 7
MOD_TOK (270) 8
XOR_TOK (271)
NOT_TOK (272)
AND_TOK (273)
OR_TOK (274)
COLON_TOK (275)
SEMICOLON_TOK (276)
COMMA_TOK (277)
SWITCH_TOK (278)
CASE_TOK (279)
DEFAULT_TOK (280)
WHILE_TOK (281)
FOR_TOK (282)
IF_TOK (283)
ELSE_TOK (284)
ELSEIF_TOK (285)
COMPARE_TOK (286)
GTEQ_TOK (287)
LTEQ_TOK (288)
NOT_EQ_TOK (289)
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292)
MINUS_EQ_TOK (293)
MULT_EQ_TOK (294)
DIVIDE_EQ_TOK (295)
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 12 14
PLUS_PLUS_TOK (299) 11 13
MOD_EQ_TOK (300)
ERROR_TOK (301)
RETURN_TOK (302)
INTCONST (303) 16
TYPE_TOK (304)
DOUBLECONST (305) 17
CHARCONST (306) 18
ID_TOK (307) 11 12 13 14 15
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
DEBUG (55)
    on left: 1 2, on right: 0 1
exp2 (56)
    on left: 3 4 5 6 7 8 9 10, on right: 1 2 3 4 5 6 7 8
exp0 (57)
    on left: 11 12 13 14, on right: 9
var (58)
    on left: 15 16 17 18, on right: 10


State 0

    0 $accept: . DEBUG $end

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    DEBUG  go to state 8
    exp2   go to state 9
    exp0   go to state 10
    var    go to state 11


State 1

    3 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 12
    exp0  go to state 10
    var   go to state 11


State 2

   14 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 13


State 3

   13 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 14


State 4

   16 var: INTCONST .

    $default  reduce using rule 16 (var)


State 5

   17 var: DOUBLECONST .

    $default  reduce using rule 17 (var)


State 6

   18 var: CHARCONST .

    $default  reduce using rule 18 (var)


State 7

   11 exp0: ID_TOK . PLUS_PLUS_TOK
   12     | ID_TOK . MINUS_MINUS_TOK
   15 var: ID_TOK .

    MINUS_MINUS_TOK  shift, and go to state 15
    PLUS_PLUS_TOK    shift, and go to state 16

    MINUS_MINUS_TOK  [reduce using rule 15 (var)]
    PLUS_PLUS_TOK    [reduce using rule 15 (var)]
    $default         reduce using rule 15 (var)


State 8

    0 $accept: DEBUG . $end
    1 DEBUG: DEBUG . exp2

    $end             shift, and go to state 17
    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 18
    exp0  go to state 10
    var   go to state 11


State 9

    2 DEBUG: exp2 .
    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 19
    PLUS_TOK    shift, and go to state 20
    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23

    $default  reduce using rule 2 (DEBUG)


State 10

    9 exp2: exp0 .

    $default  reduce using rule 9 (exp2)


State 11

   10 exp2: var .

    $default  reduce using rule 10 (exp2)


State 12

    3 exp2: LPAREN_TOK exp2 . RPAREN_TOK
    4     | exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    RPAREN_TOK  shift, and go to state 24
    MINUS_TOK   shift, and go to state 19
    PLUS_TOK    shift, and go to state 20
    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23


State 13

   14 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 14 (exp0)


State 14

   13 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 13 (exp0)


State 15

   12 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 12 (exp0)


State 16

   11 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 11 (exp0)


State 17

    0 $accept: DEBUG $end .

    $default  accept


State 18

    1 DEBUG: DEBUG exp2 .
    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    MINUS_TOK   shift, and go to state 19
    PLUS_TOK    shift, and go to state 20
    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23

    $default  reduce using rule 1 (DEBUG)


State 19

    5 exp2: exp2 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 25
    exp0  go to state 10
    var   go to state 11


State 20

    4 exp2: exp2 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 26
    exp0  go to state 10
    var   go to state 11


State 21

    6 exp2: exp2 MULT_TOK . exp2

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 27
    exp0  go to state 10
    var   go to state 11


State 22

    7 exp2: exp2 DIVIDE_TOK . exp2

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 28
    exp0  go to state 10
    var   go to state 11


State 23

    8 exp2: exp2 MOD_TOK . exp2

    LPAREN_TOK       shift, and go to state 1
    MINUS_MINUS_TOK  shift, and go to state 2
    PLUS_PLUS_TOK    shift, and go to state 3
    INTCONST         shift, and go to state 4
    DOUBLECONST      shift, and go to state 5
    CHARCONST        shift, and go to state 6
    ID_TOK           shift, and go to state 7

    exp2  go to state 29
    exp0  go to state 10
    var   go to state 11


State 24

    3 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 3 (exp2)


State 25

    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    5     | exp2 MINUS_TOK exp2 .
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23

    MOD_TOK   [reduce using rule 5 (exp2)]
    $default  reduce using rule 5 (exp2)


State 26

    4 exp2: exp2 . PLUS_TOK exp2
    4     | exp2 PLUS_TOK exp2 .
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23

    MOD_TOK   [reduce using rule 4 (exp2)]
    $default  reduce using rule 4 (exp2)


State 27

    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    6     | exp2 MULT_TOK exp2 .
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 23

    MOD_TOK   [reduce using rule 6 (exp2)]
    $default  reduce using rule 6 (exp2)


State 28

    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    7     | exp2 DIVIDE_TOK exp2 .
    8     | exp2 . MOD_TOK exp2

    MOD_TOK  shift, and go to state 23

    MOD_TOK   [reduce using rule 7 (exp2)]
    $default  reduce using rule 7 (exp2)


State 29

    4 exp2: exp2 . PLUS_TOK exp2
    5     | exp2 . MINUS_TOK exp2
    6     | exp2 . MULT_TOK exp2
    7     | exp2 . DIVIDE_TOK exp2
    8     | exp2 . MOD_TOK exp2
    8     | exp2 MOD_TOK exp2 .

    MINUS_TOK   shift, and go to state 19
    PLUS_TOK    shift, and go to state 20
    MULT_TOK    shift, and go to state 21
    DIVIDE_TOK  shift, and go to state 22
    MOD_TOK     shift, and go to state 23

    MINUS_TOK   [reduce using rule 8 (exp2)]
    PLUS_TOK    [reduce using rule 8 (exp2)]
    MULT_TOK    [reduce using rule 8 (exp2)]
    DIVIDE_TOK  [reduce using rule 8 (exp2)]
    MOD_TOK     [reduce using rule 8 (exp2)]
    $default    reduce using rule 8 (exp2)
