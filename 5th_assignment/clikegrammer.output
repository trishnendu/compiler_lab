Terminals unused in grammar

   DEFINE_TOK
   XOR_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   ERROR_TOK


State 135 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: START

    2 START: vardec START
    3      | funcdef START
    4      | %empty

    5 vardeclines: vardeclines vardec
    6            | %empty

    7 vardec: TYPE_TOK ID_TOK vardecex SEMICOLON_TOK
    8       | TYPE_TOK ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK

    9 vardecex: vardecex COMMA_TOK ID_TOK
   10         | vardecex COMMA_TOK ID_TOK EQ_TOK exp2
   11         | %empty

   12 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK block
   13        | ID_TOK LPAREN_TOK arglist RPAREN_TOK block

   14 returnstatement: RETURN_TOK exp2 SEMICOLON_TOK

   15 arglist: TYPE_TOK ID_TOK arglistex
   16        | %empty

   17 arglistex: COMMA_TOK TYPE_TOK ID_TOK arglistex
   18          | COMMA_TOK TYPE_TOK ID_TOK

   19 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK

   20 paramlist: exp COMMA_TOK paramlist
   21          | exp

   22 block: CURL_LPAREN_TOK vardeclines statements CURL_RPAREN_TOK
   23      | CURL_LPAREN_TOK vardeclines CURL_RPAREN_TOK

   24 nonfunctionblock: exp SEMICOLON_TOK
   25                 | ifstatement
   26                 | loopstatement
   27                 | returnstatement
   28                 | funccall
   29                 | block

   30 statements: exp SEMICOLON_TOK statements
   31           | ifstatement statements
   32           | loopstatement statements
   33           | returnstatement statements
   34           | funccall statements
   35           | switchstatement statements
   36           | exp SEMICOLON_TOK
   37           | ifstatement
   38           | loopstatement
   39           | returnstatement
   40           | funccall
   41           | switchstatement

   42 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex
   43            | IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

   44 ifstatementex: ELSEIF_TOK condexp nonfunctionblock ifstatementex
   45              | %empty

   46 switchstatement: SWITCH_TOK condexp switchblock

   47 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock CURL_RPAREN_TOK

   48 caseblocks: CASE_TOK var COLON_TOK statements caseblocks
   49           | %empty

   50 defaultblock: DEFAULT_TOK COLON_TOK statements caseblocks
   51             | %empty

   52 loopstatement: WHILE_TOK condexp nonfunctionblock
   53              | FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

   54 forpart1: varinitlist
   55         | vardec
   56         | SEMICOLON_TOK

   57 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK varinitlist
   58            | ID_TOK EQ_TOK exp2 SEMICOLON_TOK

   59 forpart2: exp4 forpart2ex SEMICOLON_TOK
   60         | SEMICOLON_TOK

   61 forpart2ex: COMMA_TOK exp4 forpart2ex
   62           | %empty

   63 forpart3: exp forpart3ex
   64         | %empty

   65 forpart3ex: COMMA_TOK exp forpart3ex
   66           | %empty

   67 condexp: LPAREN_TOK exp4 RPAREN_TOK

   68 exp4: LPAREN_TOK exp4 RPAREN_TOK
   69     | exp3 OR_TOK exp4
   70     | exp3 AND_TOK exp4
   71     | NOT_TOK exp4
   72     | exp3

   73 exp3: LPAREN_TOK exp3 RPAREN_TOK
   74     | exp2 LT_TOK exp2
   75     | exp2 GT_TOK exp2
   76     | exp2 GTEQ_TOK exp2
   77     | exp2 LTEQ_TOK exp2
   78     | exp2 COMPARE_TOK exp2
   79     | exp2 NOT_EQ_TOK exp2
   80     | exp2

   81 exp: ID_TOK EQ_TOK exp2
   82    | ID_TOK PLUS_EQ_TOK exp2
   83    | ID_TOK MINUS_EQ_TOK exp2
   84    | ID_TOK MULT_EQ_TOK exp2
   85    | ID_TOK DIVIDE_EQ_TOK exp2
   86    | ID_TOK MOD_EQ_TOK exp2
   87    | exp0

   88 exp2: LPAREN_TOK exp2 RPAREN_TOK
   89     | exp1 PLUS_TOK exp2
   90     | exp1 MINUS_TOK exp2
   91     | exp1

   92 exp1: var MULT_TOK exp1
   93     | var DIVIDE_TOK exp1
   94     | var MOD_TOK exp1
   95     | var
   96     | exp0
   97     | funccall

   98 exp0: ID_TOK PLUS_PLUS_TOK
   99     | ID_TOK MINUS_MINUS_TOK
  100     | PLUS_PLUS_TOK ID_TOK
  101     | MINUS_MINUS_TOK ID_TOK

  102 var: ID_TOK
  103    | INTCONST
  104    | DOUBLECONST
  105    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 12 13 19 53 67 68 73 88
RPAREN_TOK (259) 12 13 19 53 67 68 73 88
CURL_LPAREN_TOK (260) 22 23 47
CURL_RPAREN_TOK (261) 22 23 47
DEFINE_TOK (262)
EQ_TOK (263) 8 10 57 58 81
GT_TOK (264) 75
LT_TOK (265) 74
MINUS_TOK (266) 90
PLUS_TOK (267) 89
MULT_TOK (268) 92
DIVIDE_TOK (269) 93
MOD_TOK (270) 94
XOR_TOK (271)
NOT_TOK (272) 71
AND_TOK (273) 70
OR_TOK (274) 69
COLON_TOK (275) 48 50
SEMICOLON_TOK (276) 7 8 14 19 24 30 36 56 58 59 60
COMMA_TOK (277) 9 10 17 18 20 57 61 65
SWITCH_TOK (278) 46
CASE_TOK (279) 48
DEFAULT_TOK (280) 50
WHILE_TOK (281) 52
FOR_TOK (282) 53
IF_TOK (283) 42 43
ELSE_TOK (284) 43
ELSEIF_TOK (285) 44
COMPARE_TOK (286) 78
GTEQ_TOK (287) 76
LTEQ_TOK (288) 77
NOT_EQ_TOK (289) 79
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292) 82
MINUS_EQ_TOK (293) 83
MULT_EQ_TOK (294) 84
DIVIDE_EQ_TOK (295) 85
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 99 101
PLUS_PLUS_TOK (299) 98 100
MOD_EQ_TOK (300) 86
ID_TOK (301) 7 8 9 10 12 13 15 17 18 19 57 58 81 82 83 84 85 86 98
    99 100 101 102
INTCONST (302) 103
ERROR_TOK (303)
DOUBLECONST (304) 104
CHARCONST (305) 105
TYPE_TOK (306) 7 8 12 15 17 18
RETURN_TOK (307) 14


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
DEBUG (54)
    on left: 1, on right: 0
START (55)
    on left: 2 3 4, on right: 1 2 3
vardeclines (56)
    on left: 5 6, on right: 5 22 23 47
vardec (57)
    on left: 7 8, on right: 2 5 55
vardecex (58)
    on left: 9 10 11, on right: 7 8 9 10
funcdef (59)
    on left: 12 13, on right: 3
returnstatement (60)
    on left: 14, on right: 27 33 39
arglist (61)
    on left: 15 16, on right: 12 13
arglistex (62)
    on left: 17 18, on right: 15 17
funccall (63)
    on left: 19, on right: 28 34 40 97
paramlist (64)
    on left: 20 21, on right: 19 20
block (65)
    on left: 22 23, on right: 12 13 29
nonfunctionblock (66)
    on left: 24 25 26 27 28 29, on right: 42 43 44 52 53
statements (67)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41, on right: 22 30 31
    32 33 34 35 48 50
ifstatement (68)
    on left: 42 43, on right: 25 31 37
ifstatementex (69)
    on left: 44 45, on right: 42 43 44
switchstatement (70)
    on left: 46, on right: 35 41
switchblock (71)
    on left: 47, on right: 46
caseblocks (72)
    on left: 48 49, on right: 47 48 50
defaultblock (73)
    on left: 50 51, on right: 47
loopstatement (74)
    on left: 52 53, on right: 26 32 38
forpart1 (75)
    on left: 54 55 56, on right: 53
varinitlist (76)
    on left: 57 58, on right: 54 57
forpart2 (77)
    on left: 59 60, on right: 53
forpart2ex (78)
    on left: 61 62, on right: 59 61
forpart3 (79)
    on left: 63 64, on right: 53
forpart3ex (80)
    on left: 65 66, on right: 63 65
condexp (81)
    on left: 67, on right: 42 43 44 46 52
exp4 (82)
    on left: 68 69 70 71 72, on right: 59 61 67 68 69 70 71
exp3 (83)
    on left: 73 74 75 76 77 78 79 80, on right: 69 70 72 73
exp (84)
    on left: 81 82 83 84 85 86 87, on right: 20 21 24 30 36 63 65
exp2 (85)
    on left: 88 89 90 91, on right: 8 10 14 57 58 74 75 76 77 78 79
    80 81 82 83 84 85 86 88 89 90
exp1 (86)
    on left: 92 93 94 95 96 97, on right: 89 90 91 92 93 94
exp0 (87)
    on left: 98 99 100 101, on right: 87 96
var (88)
    on left: 102 103 104 105, on right: 48 92 93 94 95


State 0

    0 $accept: . DEBUG $end

    ID_TOK    shift, and go to state 1
    TYPE_TOK  shift, and go to state 2

    $default  reduce using rule 4 (START)

    DEBUG    go to state 3
    START    go to state 4
    vardec   go to state 5
    funcdef  go to state 6


State 1

   13 funcdef: ID_TOK . LPAREN_TOK arglist RPAREN_TOK block

    LPAREN_TOK  shift, and go to state 7


State 2

    7 vardec: TYPE_TOK . ID_TOK vardecex SEMICOLON_TOK
    8       | TYPE_TOK . ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK
   12 funcdef: TYPE_TOK . ID_TOK LPAREN_TOK arglist RPAREN_TOK block

    ID_TOK  shift, and go to state 8


State 3

    0 $accept: DEBUG . $end

    $end  shift, and go to state 9


State 4

    1 DEBUG: START .

    $default  reduce using rule 1 (DEBUG)


State 5

    2 START: vardec . START

    ID_TOK    shift, and go to state 1
    TYPE_TOK  shift, and go to state 2

    $default  reduce using rule 4 (START)

    START    go to state 10
    vardec   go to state 5
    funcdef  go to state 6


State 6

    3 START: funcdef . START

    ID_TOK    shift, and go to state 1
    TYPE_TOK  shift, and go to state 2

    $default  reduce using rule 4 (START)

    START    go to state 11
    vardec   go to state 5
    funcdef  go to state 6


State 7

   13 funcdef: ID_TOK LPAREN_TOK . arglist RPAREN_TOK block

    TYPE_TOK  shift, and go to state 12

    $default  reduce using rule 16 (arglist)

    arglist  go to state 13


State 8

    7 vardec: TYPE_TOK ID_TOK . vardecex SEMICOLON_TOK
    8       | TYPE_TOK ID_TOK . EQ_TOK exp2 vardecex SEMICOLON_TOK
   12 funcdef: TYPE_TOK ID_TOK . LPAREN_TOK arglist RPAREN_TOK block

    LPAREN_TOK  shift, and go to state 14
    EQ_TOK      shift, and go to state 15

    $default  reduce using rule 11 (vardecex)

    vardecex  go to state 16


State 9

    0 $accept: DEBUG $end .

    $default  accept


State 10

    2 START: vardec START .

    $default  reduce using rule 2 (START)


State 11

    3 START: funcdef START .

    $default  reduce using rule 3 (START)


State 12

   15 arglist: TYPE_TOK . ID_TOK arglistex

    ID_TOK  shift, and go to state 17


State 13

   13 funcdef: ID_TOK LPAREN_TOK arglist . RPAREN_TOK block

    RPAREN_TOK  shift, and go to state 18


State 14

   12 funcdef: TYPE_TOK ID_TOK LPAREN_TOK . arglist RPAREN_TOK block

    TYPE_TOK  shift, and go to state 12

    $default  reduce using rule 16 (arglist)

    arglist  go to state 19


State 15

    8 vardec: TYPE_TOK ID_TOK EQ_TOK . exp2 vardecex SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 28
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 16

    7 vardec: TYPE_TOK ID_TOK vardecex . SEMICOLON_TOK
    9 vardecex: vardecex . COMMA_TOK ID_TOK
   10         | vardecex . COMMA_TOK ID_TOK EQ_TOK exp2

    SEMICOLON_TOK  shift, and go to state 32
    COMMA_TOK      shift, and go to state 33


State 17

   15 arglist: TYPE_TOK ID_TOK . arglistex

    COMMA_TOK  shift, and go to state 34

    arglistex  go to state 35


State 18

   13 funcdef: ID_TOK LPAREN_TOK arglist RPAREN_TOK . block

    CURL_LPAREN_TOK  shift, and go to state 36

    block  go to state 37


State 19

   12 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist . RPAREN_TOK block

    RPAREN_TOK  shift, and go to state 38


State 20

   88 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 39
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 21

  101 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 40


State 22

  100 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 41


State 23

   19 funccall: ID_TOK . LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK
   98 exp0: ID_TOK . PLUS_PLUS_TOK
   99     | ID_TOK . MINUS_MINUS_TOK
  102 var: ID_TOK .

    LPAREN_TOK       shift, and go to state 42
    MINUS_MINUS_TOK  shift, and go to state 43
    PLUS_PLUS_TOK    shift, and go to state 44

    $default  reduce using rule 102 (var)


State 24

  103 var: INTCONST .

    $default  reduce using rule 103 (var)


State 25

  104 var: DOUBLECONST .

    $default  reduce using rule 104 (var)


State 26

  105 var: CHARCONST .

    $default  reduce using rule 105 (var)


State 27

   97 exp1: funccall .

    $default  reduce using rule 97 (exp1)


State 28

    8 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 . vardecex SEMICOLON_TOK

    $default  reduce using rule 11 (vardecex)

    vardecex  go to state 45


State 29

   89 exp2: exp1 . PLUS_TOK exp2
   90     | exp1 . MINUS_TOK exp2
   91     | exp1 .

    MINUS_TOK  shift, and go to state 46
    PLUS_TOK   shift, and go to state 47

    $default  reduce using rule 91 (exp2)


State 30

   96 exp1: exp0 .

    $default  reduce using rule 96 (exp1)


State 31

   92 exp1: var . MULT_TOK exp1
   93     | var . DIVIDE_TOK exp1
   94     | var . MOD_TOK exp1
   95     | var .

    MULT_TOK    shift, and go to state 48
    DIVIDE_TOK  shift, and go to state 49
    MOD_TOK     shift, and go to state 50

    $default  reduce using rule 95 (exp1)


State 32

    7 vardec: TYPE_TOK ID_TOK vardecex SEMICOLON_TOK .

    $default  reduce using rule 7 (vardec)


State 33

    9 vardecex: vardecex COMMA_TOK . ID_TOK
   10         | vardecex COMMA_TOK . ID_TOK EQ_TOK exp2

    ID_TOK  shift, and go to state 51


State 34

   17 arglistex: COMMA_TOK . TYPE_TOK ID_TOK arglistex
   18          | COMMA_TOK . TYPE_TOK ID_TOK

    TYPE_TOK  shift, and go to state 52


State 35

   15 arglist: TYPE_TOK ID_TOK arglistex .

    $default  reduce using rule 15 (arglist)


State 36

   22 block: CURL_LPAREN_TOK . vardeclines statements CURL_RPAREN_TOK
   23      | CURL_LPAREN_TOK . vardeclines CURL_RPAREN_TOK

    $default  reduce using rule 6 (vardeclines)

    vardeclines  go to state 53


State 37

   13 funcdef: ID_TOK LPAREN_TOK arglist RPAREN_TOK block .

    $default  reduce using rule 13 (funcdef)


State 38

   12 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK . block

    CURL_LPAREN_TOK  shift, and go to state 36

    block  go to state 54


State 39

   88 exp2: LPAREN_TOK exp2 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 55


State 40

  101 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 101 (exp0)


State 41

  100 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 100 (exp0)


State 42

   19 funccall: ID_TOK LPAREN_TOK . paramlist RPAREN_TOK SEMICOLON_TOK

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 56

    paramlist  go to state 57
    exp        go to state 58
    exp0       go to state 59


State 43

   99 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 99 (exp0)


State 44

   98 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 98 (exp0)


State 45

    8 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 vardecex . SEMICOLON_TOK
    9 vardecex: vardecex . COMMA_TOK ID_TOK
   10         | vardecex . COMMA_TOK ID_TOK EQ_TOK exp2

    SEMICOLON_TOK  shift, and go to state 60
    COMMA_TOK      shift, and go to state 33


State 46

   90 exp2: exp1 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 61
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 47

   89 exp2: exp1 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 62
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 48

   92 exp1: var MULT_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp1      go to state 63
    exp0      go to state 30
    var       go to state 31


State 49

   93 exp1: var DIVIDE_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp1      go to state 64
    exp0      go to state 30
    var       go to state 31


State 50

   94 exp1: var MOD_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp1      go to state 65
    exp0      go to state 30
    var       go to state 31


State 51

    9 vardecex: vardecex COMMA_TOK ID_TOK .
   10         | vardecex COMMA_TOK ID_TOK . EQ_TOK exp2

    EQ_TOK  shift, and go to state 66

    $default  reduce using rule 9 (vardecex)


State 52

   17 arglistex: COMMA_TOK TYPE_TOK . ID_TOK arglistex
   18          | COMMA_TOK TYPE_TOK . ID_TOK

    ID_TOK  shift, and go to state 67


State 53

    5 vardeclines: vardeclines . vardec
   22 block: CURL_LPAREN_TOK vardeclines . statements CURL_RPAREN_TOK
   23      | CURL_LPAREN_TOK vardeclines . CURL_RPAREN_TOK

    CURL_RPAREN_TOK  shift, and go to state 68
    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    TYPE_TOK         shift, and go to state 74
    RETURN_TOK       shift, and go to state 75

    vardec           go to state 76
    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 79
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 54

   12 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK block .

    $default  reduce using rule 12 (funcdef)


State 55

   88 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 88 (exp2)


State 56

   81 exp: ID_TOK . EQ_TOK exp2
   82    | ID_TOK . PLUS_EQ_TOK exp2
   83    | ID_TOK . MINUS_EQ_TOK exp2
   84    | ID_TOK . MULT_EQ_TOK exp2
   85    | ID_TOK . DIVIDE_EQ_TOK exp2
   86    | ID_TOK . MOD_EQ_TOK exp2
   98 exp0: ID_TOK . PLUS_PLUS_TOK
   99     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 84
    PLUS_EQ_TOK      shift, and go to state 85
    MINUS_EQ_TOK     shift, and go to state 86
    MULT_EQ_TOK      shift, and go to state 87
    DIVIDE_EQ_TOK    shift, and go to state 88
    MINUS_MINUS_TOK  shift, and go to state 43
    PLUS_PLUS_TOK    shift, and go to state 44
    MOD_EQ_TOK       shift, and go to state 89


State 57

   19 funccall: ID_TOK LPAREN_TOK paramlist . RPAREN_TOK SEMICOLON_TOK

    RPAREN_TOK  shift, and go to state 90


State 58

   20 paramlist: exp . COMMA_TOK paramlist
   21          | exp .

    COMMA_TOK  shift, and go to state 91

    $default  reduce using rule 21 (paramlist)


State 59

   87 exp: exp0 .

    $default  reduce using rule 87 (exp)


State 60

    8 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK .

    $default  reduce using rule 8 (vardec)


State 61

   90 exp2: exp1 MINUS_TOK exp2 .

    $default  reduce using rule 90 (exp2)


State 62

   89 exp2: exp1 PLUS_TOK exp2 .

    $default  reduce using rule 89 (exp2)


State 63

   92 exp1: var MULT_TOK exp1 .

    $default  reduce using rule 92 (exp1)


State 64

   93 exp1: var DIVIDE_TOK exp1 .

    $default  reduce using rule 93 (exp1)


State 65

   94 exp1: var MOD_TOK exp1 .

    $default  reduce using rule 94 (exp1)


State 66

   10 vardecex: vardecex COMMA_TOK ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 92
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 67

   17 arglistex: COMMA_TOK TYPE_TOK ID_TOK . arglistex
   18          | COMMA_TOK TYPE_TOK ID_TOK .

    COMMA_TOK  shift, and go to state 34

    $default  reduce using rule 18 (arglistex)

    arglistex  go to state 93


State 68

   23 block: CURL_LPAREN_TOK vardeclines CURL_RPAREN_TOK .

    $default  reduce using rule 23 (block)


State 69

   46 switchstatement: SWITCH_TOK . condexp switchblock

    LPAREN_TOK  shift, and go to state 94

    condexp  go to state 95


State 70

   52 loopstatement: WHILE_TOK . condexp nonfunctionblock

    LPAREN_TOK  shift, and go to state 94

    condexp  go to state 96


State 71

   53 loopstatement: FOR_TOK . LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 97


State 72

   42 ifstatement: IF_TOK . condexp nonfunctionblock ifstatementex
   43            | IF_TOK . condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 94

    condexp  go to state 98


State 73

   19 funccall: ID_TOK . LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK
   81 exp: ID_TOK . EQ_TOK exp2
   82    | ID_TOK . PLUS_EQ_TOK exp2
   83    | ID_TOK . MINUS_EQ_TOK exp2
   84    | ID_TOK . MULT_EQ_TOK exp2
   85    | ID_TOK . DIVIDE_EQ_TOK exp2
   86    | ID_TOK . MOD_EQ_TOK exp2
   98 exp0: ID_TOK . PLUS_PLUS_TOK
   99     | ID_TOK . MINUS_MINUS_TOK

    LPAREN_TOK       shift, and go to state 42
    EQ_TOK           shift, and go to state 84
    PLUS_EQ_TOK      shift, and go to state 85
    MINUS_EQ_TOK     shift, and go to state 86
    MULT_EQ_TOK      shift, and go to state 87
    DIVIDE_EQ_TOK    shift, and go to state 88
    MINUS_MINUS_TOK  shift, and go to state 43
    PLUS_PLUS_TOK    shift, and go to state 44
    MOD_EQ_TOK       shift, and go to state 89


State 74

    7 vardec: TYPE_TOK . ID_TOK vardecex SEMICOLON_TOK
    8       | TYPE_TOK . ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK

    ID_TOK  shift, and go to state 99


State 75

   14 returnstatement: RETURN_TOK . exp2 SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 100
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 76

    5 vardeclines: vardeclines vardec .

    $default  reduce using rule 5 (vardeclines)


State 77

   33 statements: returnstatement . statements
   39           | returnstatement .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 39 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 101
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 78

   34 statements: funccall . statements
   40           | funccall .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 40 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 102
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 79

   22 block: CURL_LPAREN_TOK vardeclines statements . CURL_RPAREN_TOK

    CURL_RPAREN_TOK  shift, and go to state 103


State 80

   31 statements: ifstatement . statements
   37           | ifstatement .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 37 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 104
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 81

   35 statements: switchstatement . statements
   41           | switchstatement .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 41 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 105
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 82

   32 statements: loopstatement . statements
   38           | loopstatement .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 38 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 106
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 83

   30 statements: exp . SEMICOLON_TOK statements
   36           | exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 107


State 84

   81 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 108
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 85

   82 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 109
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 86

   83 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 110
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 87

   84 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 111
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 88

   85 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 112
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 89

   86 exp: ID_TOK MOD_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 113
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 90

   19 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 114


State 91

   20 paramlist: exp COMMA_TOK . paramlist

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 56

    paramlist  go to state 115
    exp        go to state 58
    exp0       go to state 59


State 92

   10 vardecex: vardecex COMMA_TOK ID_TOK EQ_TOK exp2 .

    $default  reduce using rule 10 (vardecex)


State 93

   17 arglistex: COMMA_TOK TYPE_TOK ID_TOK arglistex .

    $default  reduce using rule 17 (arglistex)


State 94

   67 condexp: LPAREN_TOK . exp4 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 118
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 95

   46 switchstatement: SWITCH_TOK condexp . switchblock

    CURL_LPAREN_TOK  shift, and go to state 121

    switchblock  go to state 122


State 96

   52 loopstatement: WHILE_TOK condexp . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 36
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement   go to state 123
    funccall          go to state 124
    block             go to state 125
    nonfunctionblock  go to state 126
    ifstatement       go to state 127
    loopstatement     go to state 128
    exp               go to state 129
    exp0              go to state 59


State 97

   53 loopstatement: FOR_TOK LPAREN_TOK . forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

    SEMICOLON_TOK  shift, and go to state 130
    ID_TOK         shift, and go to state 131
    TYPE_TOK       shift, and go to state 74

    vardec       go to state 132
    forpart1     go to state 133
    varinitlist  go to state 134


State 98

   42 ifstatement: IF_TOK condexp . nonfunctionblock ifstatementex
   43            | IF_TOK condexp . nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 36
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement   go to state 123
    funccall          go to state 124
    block             go to state 125
    nonfunctionblock  go to state 135
    ifstatement       go to state 127
    loopstatement     go to state 128
    exp               go to state 129
    exp0              go to state 59


State 99

    7 vardec: TYPE_TOK ID_TOK . vardecex SEMICOLON_TOK
    8       | TYPE_TOK ID_TOK . EQ_TOK exp2 vardecex SEMICOLON_TOK

    EQ_TOK  shift, and go to state 15

    $default  reduce using rule 11 (vardecex)

    vardecex  go to state 16


State 100

   14 returnstatement: RETURN_TOK exp2 . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 136


State 101

   33 statements: returnstatement statements .

    $default  reduce using rule 33 (statements)


State 102

   34 statements: funccall statements .

    $default  reduce using rule 34 (statements)


State 103

   22 block: CURL_LPAREN_TOK vardeclines statements CURL_RPAREN_TOK .

    $default  reduce using rule 22 (block)


State 104

   31 statements: ifstatement statements .

    $default  reduce using rule 31 (statements)


State 105

   35 statements: switchstatement statements .

    $default  reduce using rule 35 (statements)


State 106

   32 statements: loopstatement statements .

    $default  reduce using rule 32 (statements)


State 107

   30 statements: exp SEMICOLON_TOK . statements
   36           | exp SEMICOLON_TOK .

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    $default  reduce using rule 36 (statements)

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 137
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 108

   81 exp: ID_TOK EQ_TOK exp2 .

    $default  reduce using rule 81 (exp)


State 109

   82 exp: ID_TOK PLUS_EQ_TOK exp2 .

    $default  reduce using rule 82 (exp)


State 110

   83 exp: ID_TOK MINUS_EQ_TOK exp2 .

    $default  reduce using rule 83 (exp)


State 111

   84 exp: ID_TOK MULT_EQ_TOK exp2 .

    $default  reduce using rule 84 (exp)


State 112

   85 exp: ID_TOK DIVIDE_EQ_TOK exp2 .

    $default  reduce using rule 85 (exp)


State 113

   86 exp: ID_TOK MOD_EQ_TOK exp2 .

    $default  reduce using rule 86 (exp)


State 114

   19 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK .

    $default  reduce using rule 19 (funccall)


State 115

   20 paramlist: exp COMMA_TOK paramlist .

    $default  reduce using rule 20 (paramlist)


State 116

   68 exp4: LPAREN_TOK . exp4 RPAREN_TOK
   73 exp3: LPAREN_TOK . exp3 RPAREN_TOK
   88 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 138
    exp3      go to state 139
    exp2      go to state 140
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 117

   71 exp4: NOT_TOK . exp4

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 141
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 118

   67 condexp: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 142


State 119

   69 exp4: exp3 . OR_TOK exp4
   70     | exp3 . AND_TOK exp4
   72     | exp3 .

    AND_TOK  shift, and go to state 143
    OR_TOK   shift, and go to state 144

    $default  reduce using rule 72 (exp4)


State 120

   74 exp3: exp2 . LT_TOK exp2
   75     | exp2 . GT_TOK exp2
   76     | exp2 . GTEQ_TOK exp2
   77     | exp2 . LTEQ_TOK exp2
   78     | exp2 . COMPARE_TOK exp2
   79     | exp2 . NOT_EQ_TOK exp2
   80     | exp2 .

    GT_TOK       shift, and go to state 145
    LT_TOK       shift, and go to state 146
    COMPARE_TOK  shift, and go to state 147
    GTEQ_TOK     shift, and go to state 148
    LTEQ_TOK     shift, and go to state 149
    NOT_EQ_TOK   shift, and go to state 150

    $default  reduce using rule 80 (exp3)


State 121

   47 switchblock: CURL_LPAREN_TOK . vardeclines caseblocks defaultblock CURL_RPAREN_TOK

    $default  reduce using rule 6 (vardeclines)

    vardeclines  go to state 151


State 122

   46 switchstatement: SWITCH_TOK condexp switchblock .

    $default  reduce using rule 46 (switchstatement)


State 123

   27 nonfunctionblock: returnstatement .

    $default  reduce using rule 27 (nonfunctionblock)


State 124

   28 nonfunctionblock: funccall .

    $default  reduce using rule 28 (nonfunctionblock)


State 125

   29 nonfunctionblock: block .

    $default  reduce using rule 29 (nonfunctionblock)


State 126

   52 loopstatement: WHILE_TOK condexp nonfunctionblock .

    $default  reduce using rule 52 (loopstatement)


State 127

   25 nonfunctionblock: ifstatement .

    $default  reduce using rule 25 (nonfunctionblock)


State 128

   26 nonfunctionblock: loopstatement .

    $default  reduce using rule 26 (nonfunctionblock)


State 129

   24 nonfunctionblock: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 152


State 130

   56 forpart1: SEMICOLON_TOK .

    $default  reduce using rule 56 (forpart1)


State 131

   57 varinitlist: ID_TOK . EQ_TOK exp2 COMMA_TOK varinitlist
   58            | ID_TOK . EQ_TOK exp2 SEMICOLON_TOK

    EQ_TOK  shift, and go to state 153


State 132

   55 forpart1: vardec .

    $default  reduce using rule 55 (forpart1)


State 133

   53 loopstatement: FOR_TOK LPAREN_TOK forpart1 . forpart2 forpart3 RPAREN_TOK nonfunctionblock

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    SEMICOLON_TOK    shift, and go to state 154
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    forpart2  go to state 155
    exp4      go to state 156
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 134

   54 forpart1: varinitlist .

    $default  reduce using rule 54 (forpart1)


State 135

   42 ifstatement: IF_TOK condexp nonfunctionblock . ifstatementex
   43            | IF_TOK condexp nonfunctionblock . ifstatementex ELSE_TOK nonfunctionblock

    ELSEIF_TOK  shift, and go to state 157

    ELSEIF_TOK  [reduce using rule 45 (ifstatementex)]
    $default    reduce using rule 45 (ifstatementex)

    ifstatementex  go to state 158


State 136

   14 returnstatement: RETURN_TOK exp2 SEMICOLON_TOK .

    $default  reduce using rule 14 (returnstatement)


State 137

   30 statements: exp SEMICOLON_TOK statements .

    $default  reduce using rule 30 (statements)


State 138

   68 exp4: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 159


State 139

   69 exp4: exp3 . OR_TOK exp4
   70     | exp3 . AND_TOK exp4
   72     | exp3 .
   73 exp3: LPAREN_TOK exp3 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 160
    AND_TOK     shift, and go to state 143
    OR_TOK      shift, and go to state 144

    RPAREN_TOK  [reduce using rule 72 (exp4)]


State 140

   74 exp3: exp2 . LT_TOK exp2
   75     | exp2 . GT_TOK exp2
   76     | exp2 . GTEQ_TOK exp2
   77     | exp2 . LTEQ_TOK exp2
   78     | exp2 . COMPARE_TOK exp2
   79     | exp2 . NOT_EQ_TOK exp2
   80     | exp2 .
   88 exp2: LPAREN_TOK exp2 . RPAREN_TOK

    RPAREN_TOK   shift, and go to state 55
    GT_TOK       shift, and go to state 145
    LT_TOK       shift, and go to state 146
    COMPARE_TOK  shift, and go to state 147
    GTEQ_TOK     shift, and go to state 148
    LTEQ_TOK     shift, and go to state 149
    NOT_EQ_TOK   shift, and go to state 150

    RPAREN_TOK  [reduce using rule 80 (exp3)]
    $default    reduce using rule 80 (exp3)


State 141

   71 exp4: NOT_TOK exp4 .

    $default  reduce using rule 71 (exp4)


State 142

   67 condexp: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 67 (condexp)


State 143

   70 exp4: exp3 AND_TOK . exp4

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 161
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 144

   69 exp4: exp3 OR_TOK . exp4

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 162
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 145

   75 exp3: exp2 GT_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 163
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 146

   74 exp3: exp2 LT_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 164
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 147

   78 exp3: exp2 COMPARE_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 165
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 148

   76 exp3: exp2 GTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 166
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 149

   77 exp3: exp2 LTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 167
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 150

   79 exp3: exp2 NOT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 168
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 151

    5 vardeclines: vardeclines . vardec
   47 switchblock: CURL_LPAREN_TOK vardeclines . caseblocks defaultblock CURL_RPAREN_TOK

    CASE_TOK  shift, and go to state 169
    TYPE_TOK  shift, and go to state 74

    $default  reduce using rule 49 (caseblocks)

    vardec      go to state 76
    caseblocks  go to state 170


State 152

   24 nonfunctionblock: exp SEMICOLON_TOK .

    $default  reduce using rule 24 (nonfunctionblock)


State 153

   57 varinitlist: ID_TOK EQ_TOK . exp2 COMMA_TOK varinitlist
   58            | ID_TOK EQ_TOK . exp2 SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 20
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp2      go to state 171
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 154

   60 forpart2: SEMICOLON_TOK .

    $default  reduce using rule 60 (forpart2)


State 155

   53 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 . forpart3 RPAREN_TOK nonfunctionblock

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 56

    $default  reduce using rule 64 (forpart3)

    forpart3  go to state 172
    exp       go to state 173
    exp0      go to state 59


State 156

   59 forpart2: exp4 . forpart2ex SEMICOLON_TOK

    COMMA_TOK  shift, and go to state 174

    $default  reduce using rule 62 (forpart2ex)

    forpart2ex  go to state 175


State 157

   44 ifstatementex: ELSEIF_TOK . condexp nonfunctionblock ifstatementex

    LPAREN_TOK  shift, and go to state 94

    condexp  go to state 176


State 158

   42 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex .
   43            | IF_TOK condexp nonfunctionblock ifstatementex . ELSE_TOK nonfunctionblock

    ELSE_TOK  shift, and go to state 177

    ELSE_TOK  [reduce using rule 42 (ifstatement)]
    $default  reduce using rule 42 (ifstatement)


State 159

   68 exp4: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 68 (exp4)


State 160

   73 exp3: LPAREN_TOK exp3 RPAREN_TOK .

    $default  reduce using rule 73 (exp3)


State 161

   70 exp4: exp3 AND_TOK exp4 .

    $default  reduce using rule 70 (exp4)


State 162

   69 exp4: exp3 OR_TOK exp4 .

    $default  reduce using rule 69 (exp4)


State 163

   75 exp3: exp2 GT_TOK exp2 .

    $default  reduce using rule 75 (exp3)


State 164

   74 exp3: exp2 LT_TOK exp2 .

    $default  reduce using rule 74 (exp3)


State 165

   78 exp3: exp2 COMPARE_TOK exp2 .

    $default  reduce using rule 78 (exp3)


State 166

   76 exp3: exp2 GTEQ_TOK exp2 .

    $default  reduce using rule 76 (exp3)


State 167

   77 exp3: exp2 LTEQ_TOK exp2 .

    $default  reduce using rule 77 (exp3)


State 168

   79 exp3: exp2 NOT_EQ_TOK exp2 .

    $default  reduce using rule 79 (exp3)


State 169

   48 caseblocks: CASE_TOK . var COLON_TOK statements caseblocks

    ID_TOK       shift, and go to state 178
    INTCONST     shift, and go to state 24
    DOUBLECONST  shift, and go to state 25
    CHARCONST    shift, and go to state 26

    var  go to state 179


State 170

   47 switchblock: CURL_LPAREN_TOK vardeclines caseblocks . defaultblock CURL_RPAREN_TOK

    DEFAULT_TOK  shift, and go to state 180

    $default  reduce using rule 51 (defaultblock)

    defaultblock  go to state 181


State 171

   57 varinitlist: ID_TOK EQ_TOK exp2 . COMMA_TOK varinitlist
   58            | ID_TOK EQ_TOK exp2 . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 182
    COMMA_TOK      shift, and go to state 183


State 172

   53 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 . RPAREN_TOK nonfunctionblock

    RPAREN_TOK  shift, and go to state 184


State 173

   63 forpart3: exp . forpart3ex

    COMMA_TOK  shift, and go to state 185

    $default  reduce using rule 66 (forpart3ex)

    forpart3ex  go to state 186


State 174

   61 forpart2ex: COMMA_TOK . exp4 forpart2ex

    LPAREN_TOK       shift, and go to state 116
    NOT_TOK          shift, and go to state 117
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 23
    INTCONST         shift, and go to state 24
    DOUBLECONST      shift, and go to state 25
    CHARCONST        shift, and go to state 26

    funccall  go to state 27
    exp4      go to state 187
    exp3      go to state 119
    exp2      go to state 120
    exp1      go to state 29
    exp0      go to state 30
    var       go to state 31


State 175

   59 forpart2: exp4 forpart2ex . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 188


State 176

   44 ifstatementex: ELSEIF_TOK condexp . nonfunctionblock ifstatementex

    CURL_LPAREN_TOK  shift, and go to state 36
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement   go to state 123
    funccall          go to state 124
    block             go to state 125
    nonfunctionblock  go to state 189
    ifstatement       go to state 127
    loopstatement     go to state 128
    exp               go to state 129
    exp0              go to state 59


State 177

   43 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 36
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement   go to state 123
    funccall          go to state 124
    block             go to state 125
    nonfunctionblock  go to state 190
    ifstatement       go to state 127
    loopstatement     go to state 128
    exp               go to state 129
    exp0              go to state 59


State 178

  102 var: ID_TOK .

    $default  reduce using rule 102 (var)


State 179

   48 caseblocks: CASE_TOK var . COLON_TOK statements caseblocks

    COLON_TOK  shift, and go to state 191


State 180

   50 defaultblock: DEFAULT_TOK . COLON_TOK statements caseblocks

    COLON_TOK  shift, and go to state 192


State 181

   47 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock . CURL_RPAREN_TOK

    CURL_RPAREN_TOK  shift, and go to state 193


State 182

   58 varinitlist: ID_TOK EQ_TOK exp2 SEMICOLON_TOK .

    $default  reduce using rule 58 (varinitlist)


State 183

   57 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK . varinitlist

    ID_TOK  shift, and go to state 131

    varinitlist  go to state 194


State 184

   53 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 36
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement   go to state 123
    funccall          go to state 124
    block             go to state 125
    nonfunctionblock  go to state 195
    ifstatement       go to state 127
    loopstatement     go to state 128
    exp               go to state 129
    exp0              go to state 59


State 185

   65 forpart3ex: COMMA_TOK . exp forpart3ex

    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 56

    exp   go to state 196
    exp0  go to state 59


State 186

   63 forpart3: exp forpart3ex .

    $default  reduce using rule 63 (forpart3)


State 187

   61 forpart2ex: COMMA_TOK exp4 . forpart2ex

    COMMA_TOK  shift, and go to state 174

    $default  reduce using rule 62 (forpart2ex)

    forpart2ex  go to state 197


State 188

   59 forpart2: exp4 forpart2ex SEMICOLON_TOK .

    $default  reduce using rule 59 (forpart2)


State 189

   44 ifstatementex: ELSEIF_TOK condexp nonfunctionblock . ifstatementex

    ELSEIF_TOK  shift, and go to state 157

    ELSEIF_TOK  [reduce using rule 45 (ifstatementex)]
    $default    reduce using rule 45 (ifstatementex)

    ifstatementex  go to state 198


State 190

   43 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock .

    $default  reduce using rule 43 (ifstatement)


State 191

   48 caseblocks: CASE_TOK var COLON_TOK . statements caseblocks

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 199
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 192

   50 defaultblock: DEFAULT_TOK COLON_TOK . statements caseblocks

    SWITCH_TOK       shift, and go to state 69
    WHILE_TOK        shift, and go to state 70
    FOR_TOK          shift, and go to state 71
    IF_TOK           shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 21
    PLUS_PLUS_TOK    shift, and go to state 22
    ID_TOK           shift, and go to state 73
    RETURN_TOK       shift, and go to state 75

    returnstatement  go to state 77
    funccall         go to state 78
    statements       go to state 200
    ifstatement      go to state 80
    switchstatement  go to state 81
    loopstatement    go to state 82
    exp              go to state 83
    exp0             go to state 59


State 193

   47 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock CURL_RPAREN_TOK .

    $default  reduce using rule 47 (switchblock)


State 194

   57 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK varinitlist .

    $default  reduce using rule 57 (varinitlist)


State 195

   53 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock .

    $default  reduce using rule 53 (loopstatement)


State 196

   65 forpart3ex: COMMA_TOK exp . forpart3ex

    COMMA_TOK  shift, and go to state 185

    $default  reduce using rule 66 (forpart3ex)

    forpart3ex  go to state 201


State 197

   61 forpart2ex: COMMA_TOK exp4 forpart2ex .

    $default  reduce using rule 61 (forpart2ex)


State 198

   44 ifstatementex: ELSEIF_TOK condexp nonfunctionblock ifstatementex .

    $default  reduce using rule 44 (ifstatementex)


State 199

   48 caseblocks: CASE_TOK var COLON_TOK statements . caseblocks

    CASE_TOK  shift, and go to state 169

    $default  reduce using rule 49 (caseblocks)

    caseblocks  go to state 202


State 200

   50 defaultblock: DEFAULT_TOK COLON_TOK statements . caseblocks

    CASE_TOK  shift, and go to state 169

    $default  reduce using rule 49 (caseblocks)

    caseblocks  go to state 203


State 201

   65 forpart3ex: COMMA_TOK exp forpart3ex .

    $default  reduce using rule 65 (forpart3ex)


State 202

   48 caseblocks: CASE_TOK var COLON_TOK statements caseblocks .

    $default  reduce using rule 48 (caseblocks)


State 203

   50 defaultblock: DEFAULT_TOK COLON_TOK statements caseblocks .

    $default  reduce using rule 50 (defaultblock)
