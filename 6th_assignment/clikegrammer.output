Terminals unused in grammar

   DEFINE_TOK
   XOR_TOK
   BIT_AND_TOK
   BIT_OR_TOK
   RIGHT_SHIFT_TOK
   LEFT_SHIFT_TOK
   ERROR_TOK


State 50 conflicts: 1 reduce/reduce
State 138 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 192 conflicts: 1 shift/reduce


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: START

    2 START: vardec START
    3      | funcdef START
    4      | %empty

    5 vardec: TYPE_TOK ID_TOK vardecex SEMICOLON_TOK
    6       | TYPE_TOK ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK

    7 vardecex: vardecex COMMA_TOK ID_TOK
    8         | vardecex COMMA_TOK ID_TOK EQ_TOK exp2
    9         | %empty

   10 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK block
   11        | ID_TOK LPAREN_TOK arglist RPAREN_TOK block

   12 returnstatement: RETURN_TOK exp2 SEMICOLON_TOK

   13 arglist: TYPE_TOK ID_TOK arglistex
   14        | %empty

   15 arglistex: COMMA_TOK TYPE_TOK ID_TOK arglistex
   16          | COMMA_TOK TYPE_TOK ID_TOK

   17 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK

   18 paramlist: exp COMMA_TOK paramlist
   19          | exp

   20 $@1: %empty

   21 block: CURL_LPAREN_TOK $@1 vardeclines statements CURL_RPAREN_TOK

   22 $@2: %empty

   23 block: CURL_LPAREN_TOK $@2 vardeclines CURL_RPAREN_TOK

   24 vardeclines: vardeclines vardec
   25            | %empty

   26 nonfunctionblock: exp SEMICOLON_TOK
   27                 | ifstatement
   28                 | loopstatement
   29                 | returnstatement
   30                 | funccall
   31                 | block

   32 statements: exp SEMICOLON_TOK statements
   33           | ifstatement statements
   34           | loopstatement statements
   35           | returnstatement statements
   36           | funccall statements
   37           | switchstatement statements
   38           | exp SEMICOLON_TOK
   39           | ifstatement
   40           | loopstatement
   41           | returnstatement
   42           | funccall
   43           | switchstatement

   44 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex
   45            | IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

   46 ifstatementex: ELSEIF_TOK condexp nonfunctionblock ifstatementex
   47              | %empty

   48 switchstatement: SWITCH_TOK condexp switchblock

   49 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock CURL_RPAREN_TOK

   50 caseblocks: CASE_TOK var COLON_TOK statements caseblocks
   51           | %empty

   52 defaultblock: DEFAULT_TOK COLON_TOK statements caseblocks
   53             | %empty

   54 loopstatement: WHILE_TOK condexp nonfunctionblock
   55              | FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

   56 forpart1: varinitlist
   57         | vardec
   58         | SEMICOLON_TOK

   59 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK varinitlist
   60            | ID_TOK EQ_TOK exp2 SEMICOLON_TOK

   61 forpart2: exp4 forpart2ex SEMICOLON_TOK
   62         | SEMICOLON_TOK

   63 forpart2ex: COMMA_TOK exp4 forpart2ex
   64           | %empty

   65 forpart3: exp forpart3ex
   66         | %empty

   67 forpart3ex: COMMA_TOK exp forpart3ex
   68           | %empty

   69 condexp: LPAREN_TOK exp4 RPAREN_TOK

   70 exp4: LPAREN_TOK exp4 RPAREN_TOK
   71     | exp3 OR_TOK exp4
   72     | exp3 AND_TOK exp4
   73     | NOT_TOK exp4
   74     | exp3

   75 exp3: LPAREN_TOK exp3 RPAREN_TOK
   76     | exp2 LT_TOK exp2
   77     | exp2 GT_TOK exp2
   78     | exp2 GTEQ_TOK exp2
   79     | exp2 LTEQ_TOK exp2
   80     | exp2 COMPARE_TOK exp2
   81     | exp2 NOT_EQ_TOK exp2
   82     | exp2

   83 exp: ID_TOK EQ_TOK exp2
   84    | ID_TOK PLUS_EQ_TOK exp2
   85    | ID_TOK MINUS_EQ_TOK exp2
   86    | ID_TOK MULT_EQ_TOK exp2
   87    | ID_TOK DIVIDE_EQ_TOK exp2
   88    | ID_TOK MOD_EQ_TOK exp2
   89    | exp0

   90 exp2: LPAREN_TOK exp2 RPAREN_TOK
   91     | exp1 PLUS_TOK exp2
   92     | exp1 MINUS_TOK exp2
   93     | exp1

   94 exp1: var MULT_TOK exp1
   95     | var DIVIDE_TOK exp1
   96     | var MOD_TOK exp1
   97     | var
   98     | exp0
   99     | funccall

  100 exp0: ID_TOK PLUS_PLUS_TOK
  101     | ID_TOK MINUS_MINUS_TOK
  102     | PLUS_PLUS_TOK ID_TOK
  103     | MINUS_MINUS_TOK ID_TOK

  104 var: ID_TOK
  105    | INTCONST
  106    | DOUBLECONST
  107    | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 10 11 17 55 69 70 75 90
RPAREN_TOK (259) 10 11 17 55 69 70 75 90
CURL_LPAREN_TOK (260) 21 23 49
CURL_RPAREN_TOK (261) 21 23 49
DEFINE_TOK (262)
EQ_TOK (263) 6 8 59 60 83
GT_TOK (264) 77
LT_TOK (265) 76
MINUS_TOK (266) 92
PLUS_TOK (267) 91
MULT_TOK (268) 94
DIVIDE_TOK (269) 95
MOD_TOK (270) 96
XOR_TOK (271)
NOT_TOK (272) 73
AND_TOK (273) 72
OR_TOK (274) 71
COLON_TOK (275) 50 52
SEMICOLON_TOK (276) 5 6 12 17 26 32 38 58 60 61 62
COMMA_TOK (277) 7 8 15 16 18 59 63 67
SWITCH_TOK (278) 48
CASE_TOK (279) 50
DEFAULT_TOK (280) 52
WHILE_TOK (281) 54
FOR_TOK (282) 55
IF_TOK (283) 44 45
ELSE_TOK (284) 45
ELSEIF_TOK (285) 46
COMPARE_TOK (286) 80
GTEQ_TOK (287) 78
LTEQ_TOK (288) 79
NOT_EQ_TOK (289) 81
BIT_AND_TOK (290)
BIT_OR_TOK (291)
PLUS_EQ_TOK (292) 84
MINUS_EQ_TOK (293) 85
MULT_EQ_TOK (294) 86
DIVIDE_EQ_TOK (295) 87
RIGHT_SHIFT_TOK (296)
LEFT_SHIFT_TOK (297)
MINUS_MINUS_TOK (298) 101 103
PLUS_PLUS_TOK (299) 100 102
MOD_EQ_TOK (300) 88
ERROR_TOK (301)
RETURN_TOK (302) 12
INTCONST (303) 105
TYPE_TOK (304) 5 6 10 13 15 16
DOUBLECONST (305) 106
CHARCONST (306) 107
ID_TOK (307) 5 6 7 8 10 11 13 15 16 17 59 60 83 84 85 86 87 88 100
    101 102 103 104


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
DEBUG (54)
    on left: 1, on right: 0
START (55)
    on left: 2 3 4, on right: 1 2 3
vardec (56)
    on left: 5 6, on right: 2 24 57
vardecex (57)
    on left: 7 8 9, on right: 5 6 7 8
funcdef (58)
    on left: 10 11, on right: 3
returnstatement (59)
    on left: 12, on right: 29 35 41
arglist (60)
    on left: 13 14, on right: 10 11
arglistex (61)
    on left: 15 16, on right: 13 15
funccall (62)
    on left: 17, on right: 30 36 42 99
paramlist (63)
    on left: 18 19, on right: 17 18
block (64)
    on left: 21 23, on right: 10 11 31
$@1 (65)
    on left: 20, on right: 21
$@2 (66)
    on left: 22, on right: 23
vardeclines (67)
    on left: 24 25, on right: 21 23 24 49
nonfunctionblock (68)
    on left: 26 27 28 29 30 31, on right: 44 45 46 54 55
statements (69)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43, on right: 21 32 33
    34 35 36 37 50 52
ifstatement (70)
    on left: 44 45, on right: 27 33 39
ifstatementex (71)
    on left: 46 47, on right: 44 45 46
switchstatement (72)
    on left: 48, on right: 37 43
switchblock (73)
    on left: 49, on right: 48
caseblocks (74)
    on left: 50 51, on right: 49 50 52
defaultblock (75)
    on left: 52 53, on right: 49
loopstatement (76)
    on left: 54 55, on right: 28 34 40
forpart1 (77)
    on left: 56 57 58, on right: 55
varinitlist (78)
    on left: 59 60, on right: 56 59
forpart2 (79)
    on left: 61 62, on right: 55
forpart2ex (80)
    on left: 63 64, on right: 61 63
forpart3 (81)
    on left: 65 66, on right: 55
forpart3ex (82)
    on left: 67 68, on right: 65 67
condexp (83)
    on left: 69, on right: 44 45 46 48 54
exp4 (84)
    on left: 70 71 72 73 74, on right: 61 63 69 70 71 72 73
exp3 (85)
    on left: 75 76 77 78 79 80 81 82, on right: 71 72 74 75
exp (86)
    on left: 83 84 85 86 87 88 89, on right: 18 19 26 32 38 65 67
exp2 (87)
    on left: 90 91 92 93, on right: 6 8 12 59 60 76 77 78 79 80 81
    82 83 84 85 86 87 88 90 91 92
exp1 (88)
    on left: 94 95 96 97 98 99, on right: 91 92 93 94 95 96
exp0 (89)
    on left: 100 101 102 103, on right: 89 98
var (90)
    on left: 104 105 106 107, on right: 50 94 95 96 97


State 0

    0 $accept: . DEBUG $end

    TYPE_TOK  shift, and go to state 1
    ID_TOK    shift, and go to state 2

    $default  reduce using rule 4 (START)

    DEBUG    go to state 3
    START    go to state 4
    vardec   go to state 5
    funcdef  go to state 6


State 1

    5 vardec: TYPE_TOK . ID_TOK vardecex SEMICOLON_TOK
    6       | TYPE_TOK . ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK
   10 funcdef: TYPE_TOK . ID_TOK LPAREN_TOK arglist RPAREN_TOK block

    ID_TOK  shift, and go to state 7


State 2

   11 funcdef: ID_TOK . LPAREN_TOK arglist RPAREN_TOK block

    LPAREN_TOK  shift, and go to state 8


State 3

    0 $accept: DEBUG . $end

    $end  shift, and go to state 9


State 4

    1 DEBUG: START .

    $default  reduce using rule 1 (DEBUG)


State 5

    2 START: vardec . START

    TYPE_TOK  shift, and go to state 1
    ID_TOK    shift, and go to state 2

    $default  reduce using rule 4 (START)

    START    go to state 10
    vardec   go to state 5
    funcdef  go to state 6


State 6

    3 START: funcdef . START

    TYPE_TOK  shift, and go to state 1
    ID_TOK    shift, and go to state 2

    $default  reduce using rule 4 (START)

    START    go to state 11
    vardec   go to state 5
    funcdef  go to state 6


State 7

    5 vardec: TYPE_TOK ID_TOK . vardecex SEMICOLON_TOK
    6       | TYPE_TOK ID_TOK . EQ_TOK exp2 vardecex SEMICOLON_TOK
   10 funcdef: TYPE_TOK ID_TOK . LPAREN_TOK arglist RPAREN_TOK block

    LPAREN_TOK  shift, and go to state 12
    EQ_TOK      shift, and go to state 13

    $default  reduce using rule 9 (vardecex)

    vardecex  go to state 14


State 8

   11 funcdef: ID_TOK LPAREN_TOK . arglist RPAREN_TOK block

    TYPE_TOK  shift, and go to state 15

    $default  reduce using rule 14 (arglist)

    arglist  go to state 16


State 9

    0 $accept: DEBUG $end .

    $default  accept


State 10

    2 START: vardec START .

    $default  reduce using rule 2 (START)


State 11

    3 START: funcdef START .

    $default  reduce using rule 3 (START)


State 12

   10 funcdef: TYPE_TOK ID_TOK LPAREN_TOK . arglist RPAREN_TOK block

    TYPE_TOK  shift, and go to state 15

    $default  reduce using rule 14 (arglist)

    arglist  go to state 17


State 13

    6 vardec: TYPE_TOK ID_TOK EQ_TOK . exp2 vardecex SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 26
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 14

    5 vardec: TYPE_TOK ID_TOK vardecex . SEMICOLON_TOK
    7 vardecex: vardecex . COMMA_TOK ID_TOK
    8         | vardecex . COMMA_TOK ID_TOK EQ_TOK exp2

    SEMICOLON_TOK  shift, and go to state 30
    COMMA_TOK      shift, and go to state 31


State 15

   13 arglist: TYPE_TOK . ID_TOK arglistex

    ID_TOK  shift, and go to state 32


State 16

   11 funcdef: ID_TOK LPAREN_TOK arglist . RPAREN_TOK block

    RPAREN_TOK  shift, and go to state 33


State 17

   10 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist . RPAREN_TOK block

    RPAREN_TOK  shift, and go to state 34


State 18

   90 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 35
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 19

  103 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 36


State 20

  102 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 37


State 21

  105 var: INTCONST .

    $default  reduce using rule 105 (var)


State 22

  106 var: DOUBLECONST .

    $default  reduce using rule 106 (var)


State 23

  107 var: CHARCONST .

    $default  reduce using rule 107 (var)


State 24

   17 funccall: ID_TOK . LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK
  100 exp0: ID_TOK . PLUS_PLUS_TOK
  101     | ID_TOK . MINUS_MINUS_TOK
  104 var: ID_TOK .

    LPAREN_TOK       shift, and go to state 38
    MINUS_MINUS_TOK  shift, and go to state 39
    PLUS_PLUS_TOK    shift, and go to state 40

    $default  reduce using rule 104 (var)


State 25

   99 exp1: funccall .

    $default  reduce using rule 99 (exp1)


State 26

    6 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 . vardecex SEMICOLON_TOK

    $default  reduce using rule 9 (vardecex)

    vardecex  go to state 41


State 27

   91 exp2: exp1 . PLUS_TOK exp2
   92     | exp1 . MINUS_TOK exp2
   93     | exp1 .

    MINUS_TOK  shift, and go to state 42
    PLUS_TOK   shift, and go to state 43

    $default  reduce using rule 93 (exp2)


State 28

   98 exp1: exp0 .

    $default  reduce using rule 98 (exp1)


State 29

   94 exp1: var . MULT_TOK exp1
   95     | var . DIVIDE_TOK exp1
   96     | var . MOD_TOK exp1
   97     | var .

    MULT_TOK    shift, and go to state 44
    DIVIDE_TOK  shift, and go to state 45
    MOD_TOK     shift, and go to state 46

    $default  reduce using rule 97 (exp1)


State 30

    5 vardec: TYPE_TOK ID_TOK vardecex SEMICOLON_TOK .

    $default  reduce using rule 5 (vardec)


State 31

    7 vardecex: vardecex COMMA_TOK . ID_TOK
    8         | vardecex COMMA_TOK . ID_TOK EQ_TOK exp2

    ID_TOK  shift, and go to state 47


State 32

   13 arglist: TYPE_TOK ID_TOK . arglistex

    COMMA_TOK  shift, and go to state 48

    arglistex  go to state 49


State 33

   11 funcdef: ID_TOK LPAREN_TOK arglist RPAREN_TOK . block

    CURL_LPAREN_TOK  shift, and go to state 50

    block  go to state 51


State 34

   10 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK . block

    CURL_LPAREN_TOK  shift, and go to state 50

    block  go to state 52


State 35

   90 exp2: LPAREN_TOK exp2 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 53


State 36

  103 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 103 (exp0)


State 37

  102 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 102 (exp0)


State 38

   17 funccall: ID_TOK LPAREN_TOK . paramlist RPAREN_TOK SEMICOLON_TOK

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    ID_TOK           shift, and go to state 54

    paramlist  go to state 55
    exp        go to state 56
    exp0       go to state 57


State 39

  101 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 101 (exp0)


State 40

  100 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 100 (exp0)


State 41

    6 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 vardecex . SEMICOLON_TOK
    7 vardecex: vardecex . COMMA_TOK ID_TOK
    8         | vardecex . COMMA_TOK ID_TOK EQ_TOK exp2

    SEMICOLON_TOK  shift, and go to state 58
    COMMA_TOK      shift, and go to state 31


State 42

   92 exp2: exp1 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 59
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 43

   91 exp2: exp1 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 60
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 44

   94 exp1: var MULT_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp1      go to state 61
    exp0      go to state 28
    var       go to state 29


State 45

   95 exp1: var DIVIDE_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp1      go to state 62
    exp0      go to state 28
    var       go to state 29


State 46

   96 exp1: var MOD_TOK . exp1

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp1      go to state 63
    exp0      go to state 28
    var       go to state 29


State 47

    7 vardecex: vardecex COMMA_TOK ID_TOK .
    8         | vardecex COMMA_TOK ID_TOK . EQ_TOK exp2

    EQ_TOK  shift, and go to state 64

    $default  reduce using rule 7 (vardecex)


State 48

   15 arglistex: COMMA_TOK . TYPE_TOK ID_TOK arglistex
   16          | COMMA_TOK . TYPE_TOK ID_TOK

    TYPE_TOK  shift, and go to state 65


State 49

   13 arglist: TYPE_TOK ID_TOK arglistex .

    $default  reduce using rule 13 (arglist)


State 50

   21 block: CURL_LPAREN_TOK . $@1 vardeclines statements CURL_RPAREN_TOK
   23      | CURL_LPAREN_TOK . $@2 vardeclines CURL_RPAREN_TOK

    CURL_RPAREN_TOK  reduce using rule 22 ($@2)
    TYPE_TOK         reduce using rule 20 ($@1)
    TYPE_TOK         [reduce using rule 22 ($@2)]
    $default         reduce using rule 20 ($@1)

    $@1  go to state 66
    $@2  go to state 67


State 51

   11 funcdef: ID_TOK LPAREN_TOK arglist RPAREN_TOK block .

    $default  reduce using rule 11 (funcdef)


State 52

   10 funcdef: TYPE_TOK ID_TOK LPAREN_TOK arglist RPAREN_TOK block .

    $default  reduce using rule 10 (funcdef)


State 53

   90 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 90 (exp2)


State 54

   83 exp: ID_TOK . EQ_TOK exp2
   84    | ID_TOK . PLUS_EQ_TOK exp2
   85    | ID_TOK . MINUS_EQ_TOK exp2
   86    | ID_TOK . MULT_EQ_TOK exp2
   87    | ID_TOK . DIVIDE_EQ_TOK exp2
   88    | ID_TOK . MOD_EQ_TOK exp2
  100 exp0: ID_TOK . PLUS_PLUS_TOK
  101     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 68
    PLUS_EQ_TOK      shift, and go to state 69
    MINUS_EQ_TOK     shift, and go to state 70
    MULT_EQ_TOK      shift, and go to state 71
    DIVIDE_EQ_TOK    shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 39
    PLUS_PLUS_TOK    shift, and go to state 40
    MOD_EQ_TOK       shift, and go to state 73


State 55

   17 funccall: ID_TOK LPAREN_TOK paramlist . RPAREN_TOK SEMICOLON_TOK

    RPAREN_TOK  shift, and go to state 74


State 56

   18 paramlist: exp . COMMA_TOK paramlist
   19          | exp .

    COMMA_TOK  shift, and go to state 75

    $default  reduce using rule 19 (paramlist)


State 57

   89 exp: exp0 .

    $default  reduce using rule 89 (exp)


State 58

    6 vardec: TYPE_TOK ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK .

    $default  reduce using rule 6 (vardec)


State 59

   92 exp2: exp1 MINUS_TOK exp2 .

    $default  reduce using rule 92 (exp2)


State 60

   91 exp2: exp1 PLUS_TOK exp2 .

    $default  reduce using rule 91 (exp2)


State 61

   94 exp1: var MULT_TOK exp1 .

    $default  reduce using rule 94 (exp1)


State 62

   95 exp1: var DIVIDE_TOK exp1 .

    $default  reduce using rule 95 (exp1)


State 63

   96 exp1: var MOD_TOK exp1 .

    $default  reduce using rule 96 (exp1)


State 64

    8 vardecex: vardecex COMMA_TOK ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 76
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 65

   15 arglistex: COMMA_TOK TYPE_TOK . ID_TOK arglistex
   16          | COMMA_TOK TYPE_TOK . ID_TOK

    ID_TOK  shift, and go to state 77


State 66

   21 block: CURL_LPAREN_TOK $@1 . vardeclines statements CURL_RPAREN_TOK

    $default  reduce using rule 25 (vardeclines)

    vardeclines  go to state 78


State 67

   23 block: CURL_LPAREN_TOK $@2 . vardeclines CURL_RPAREN_TOK

    $default  reduce using rule 25 (vardeclines)

    vardeclines  go to state 79


State 68

   83 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 80
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 69

   84 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 81
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 70

   85 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 82
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 71

   86 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 83
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 72

   87 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 84
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 73

   88 exp: ID_TOK MOD_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 85
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 74

   17 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 86


State 75

   18 paramlist: exp COMMA_TOK . paramlist

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    ID_TOK           shift, and go to state 54

    paramlist  go to state 87
    exp        go to state 56
    exp0       go to state 57


State 76

    8 vardecex: vardecex COMMA_TOK ID_TOK EQ_TOK exp2 .

    $default  reduce using rule 8 (vardecex)


State 77

   15 arglistex: COMMA_TOK TYPE_TOK ID_TOK . arglistex
   16          | COMMA_TOK TYPE_TOK ID_TOK .

    COMMA_TOK  shift, and go to state 48

    $default  reduce using rule 16 (arglistex)

    arglistex  go to state 88


State 78

   21 block: CURL_LPAREN_TOK $@1 vardeclines . statements CURL_RPAREN_TOK
   24 vardeclines: vardeclines . vardec

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    TYPE_TOK         shift, and go to state 94
    ID_TOK           shift, and go to state 95

    vardec           go to state 96
    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 99
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 79

   23 block: CURL_LPAREN_TOK $@2 vardeclines . CURL_RPAREN_TOK
   24 vardeclines: vardeclines . vardec

    CURL_RPAREN_TOK  shift, and go to state 104
    TYPE_TOK         shift, and go to state 94

    vardec  go to state 96


State 80

   83 exp: ID_TOK EQ_TOK exp2 .

    $default  reduce using rule 83 (exp)


State 81

   84 exp: ID_TOK PLUS_EQ_TOK exp2 .

    $default  reduce using rule 84 (exp)


State 82

   85 exp: ID_TOK MINUS_EQ_TOK exp2 .

    $default  reduce using rule 85 (exp)


State 83

   86 exp: ID_TOK MULT_EQ_TOK exp2 .

    $default  reduce using rule 86 (exp)


State 84

   87 exp: ID_TOK DIVIDE_EQ_TOK exp2 .

    $default  reduce using rule 87 (exp)


State 85

   88 exp: ID_TOK MOD_EQ_TOK exp2 .

    $default  reduce using rule 88 (exp)


State 86

   17 funccall: ID_TOK LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK .

    $default  reduce using rule 17 (funccall)


State 87

   18 paramlist: exp COMMA_TOK paramlist .

    $default  reduce using rule 18 (paramlist)


State 88

   15 arglistex: COMMA_TOK TYPE_TOK ID_TOK arglistex .

    $default  reduce using rule 15 (arglistex)


State 89

   48 switchstatement: SWITCH_TOK . condexp switchblock

    LPAREN_TOK  shift, and go to state 105

    condexp  go to state 106


State 90

   54 loopstatement: WHILE_TOK . condexp nonfunctionblock

    LPAREN_TOK  shift, and go to state 105

    condexp  go to state 107


State 91

   55 loopstatement: FOR_TOK . LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 108


State 92

   44 ifstatement: IF_TOK . condexp nonfunctionblock ifstatementex
   45            | IF_TOK . condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    LPAREN_TOK  shift, and go to state 105

    condexp  go to state 109


State 93

   12 returnstatement: RETURN_TOK . exp2 SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 110
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 94

    5 vardec: TYPE_TOK . ID_TOK vardecex SEMICOLON_TOK
    6       | TYPE_TOK . ID_TOK EQ_TOK exp2 vardecex SEMICOLON_TOK

    ID_TOK  shift, and go to state 111


State 95

   17 funccall: ID_TOK . LPAREN_TOK paramlist RPAREN_TOK SEMICOLON_TOK
   83 exp: ID_TOK . EQ_TOK exp2
   84    | ID_TOK . PLUS_EQ_TOK exp2
   85    | ID_TOK . MINUS_EQ_TOK exp2
   86    | ID_TOK . MULT_EQ_TOK exp2
   87    | ID_TOK . DIVIDE_EQ_TOK exp2
   88    | ID_TOK . MOD_EQ_TOK exp2
  100 exp0: ID_TOK . PLUS_PLUS_TOK
  101     | ID_TOK . MINUS_MINUS_TOK

    LPAREN_TOK       shift, and go to state 38
    EQ_TOK           shift, and go to state 68
    PLUS_EQ_TOK      shift, and go to state 69
    MINUS_EQ_TOK     shift, and go to state 70
    MULT_EQ_TOK      shift, and go to state 71
    DIVIDE_EQ_TOK    shift, and go to state 72
    MINUS_MINUS_TOK  shift, and go to state 39
    PLUS_PLUS_TOK    shift, and go to state 40
    MOD_EQ_TOK       shift, and go to state 73


State 96

   24 vardeclines: vardeclines vardec .

    $default  reduce using rule 24 (vardeclines)


State 97

   35 statements: returnstatement . statements
   41           | returnstatement .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 41 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 112
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 98

   36 statements: funccall . statements
   42           | funccall .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 42 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 113
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 99

   21 block: CURL_LPAREN_TOK $@1 vardeclines statements . CURL_RPAREN_TOK

    CURL_RPAREN_TOK  shift, and go to state 114


State 100

   33 statements: ifstatement . statements
   39           | ifstatement .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 39 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 115
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 101

   37 statements: switchstatement . statements
   43           | switchstatement .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 43 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 116
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 102

   34 statements: loopstatement . statements
   40           | loopstatement .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 40 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 117
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 103

   32 statements: exp . SEMICOLON_TOK statements
   38           | exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 118


State 104

   23 block: CURL_LPAREN_TOK $@2 vardeclines CURL_RPAREN_TOK .

    $default  reduce using rule 23 (block)


State 105

   69 condexp: LPAREN_TOK . exp4 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 121
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 106

   48 switchstatement: SWITCH_TOK condexp . switchblock

    CURL_LPAREN_TOK  shift, and go to state 124

    switchblock  go to state 125


State 107

   54 loopstatement: WHILE_TOK condexp . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 50
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement   go to state 126
    funccall          go to state 127
    block             go to state 128
    nonfunctionblock  go to state 129
    ifstatement       go to state 130
    loopstatement     go to state 131
    exp               go to state 132
    exp0              go to state 57


State 108

   55 loopstatement: FOR_TOK LPAREN_TOK . forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock

    SEMICOLON_TOK  shift, and go to state 133
    TYPE_TOK       shift, and go to state 94
    ID_TOK         shift, and go to state 134

    vardec       go to state 135
    forpart1     go to state 136
    varinitlist  go to state 137


State 109

   44 ifstatement: IF_TOK condexp . nonfunctionblock ifstatementex
   45            | IF_TOK condexp . nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 50
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement   go to state 126
    funccall          go to state 127
    block             go to state 128
    nonfunctionblock  go to state 138
    ifstatement       go to state 130
    loopstatement     go to state 131
    exp               go to state 132
    exp0              go to state 57


State 110

   12 returnstatement: RETURN_TOK exp2 . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 139


State 111

    5 vardec: TYPE_TOK ID_TOK . vardecex SEMICOLON_TOK
    6       | TYPE_TOK ID_TOK . EQ_TOK exp2 vardecex SEMICOLON_TOK

    EQ_TOK  shift, and go to state 13

    $default  reduce using rule 9 (vardecex)

    vardecex  go to state 14


State 112

   35 statements: returnstatement statements .

    $default  reduce using rule 35 (statements)


State 113

   36 statements: funccall statements .

    $default  reduce using rule 36 (statements)


State 114

   21 block: CURL_LPAREN_TOK $@1 vardeclines statements CURL_RPAREN_TOK .

    $default  reduce using rule 21 (block)


State 115

   33 statements: ifstatement statements .

    $default  reduce using rule 33 (statements)


State 116

   37 statements: switchstatement statements .

    $default  reduce using rule 37 (statements)


State 117

   34 statements: loopstatement statements .

    $default  reduce using rule 34 (statements)


State 118

   32 statements: exp SEMICOLON_TOK . statements
   38           | exp SEMICOLON_TOK .

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    $default  reduce using rule 38 (statements)

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 140
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 119

   70 exp4: LPAREN_TOK . exp4 RPAREN_TOK
   75 exp3: LPAREN_TOK . exp3 RPAREN_TOK
   90 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 141
    exp3      go to state 142
    exp2      go to state 143
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 120

   73 exp4: NOT_TOK . exp4

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 144
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 121

   69 condexp: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 145


State 122

   71 exp4: exp3 . OR_TOK exp4
   72     | exp3 . AND_TOK exp4
   74     | exp3 .

    AND_TOK  shift, and go to state 146
    OR_TOK   shift, and go to state 147

    $default  reduce using rule 74 (exp4)


State 123

   76 exp3: exp2 . LT_TOK exp2
   77     | exp2 . GT_TOK exp2
   78     | exp2 . GTEQ_TOK exp2
   79     | exp2 . LTEQ_TOK exp2
   80     | exp2 . COMPARE_TOK exp2
   81     | exp2 . NOT_EQ_TOK exp2
   82     | exp2 .

    GT_TOK       shift, and go to state 148
    LT_TOK       shift, and go to state 149
    COMPARE_TOK  shift, and go to state 150
    GTEQ_TOK     shift, and go to state 151
    LTEQ_TOK     shift, and go to state 152
    NOT_EQ_TOK   shift, and go to state 153

    $default  reduce using rule 82 (exp3)


State 124

   49 switchblock: CURL_LPAREN_TOK . vardeclines caseblocks defaultblock CURL_RPAREN_TOK

    $default  reduce using rule 25 (vardeclines)

    vardeclines  go to state 154


State 125

   48 switchstatement: SWITCH_TOK condexp switchblock .

    $default  reduce using rule 48 (switchstatement)


State 126

   29 nonfunctionblock: returnstatement .

    $default  reduce using rule 29 (nonfunctionblock)


State 127

   30 nonfunctionblock: funccall .

    $default  reduce using rule 30 (nonfunctionblock)


State 128

   31 nonfunctionblock: block .

    $default  reduce using rule 31 (nonfunctionblock)


State 129

   54 loopstatement: WHILE_TOK condexp nonfunctionblock .

    $default  reduce using rule 54 (loopstatement)


State 130

   27 nonfunctionblock: ifstatement .

    $default  reduce using rule 27 (nonfunctionblock)


State 131

   28 nonfunctionblock: loopstatement .

    $default  reduce using rule 28 (nonfunctionblock)


State 132

   26 nonfunctionblock: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 155


State 133

   58 forpart1: SEMICOLON_TOK .

    $default  reduce using rule 58 (forpart1)


State 134

   59 varinitlist: ID_TOK . EQ_TOK exp2 COMMA_TOK varinitlist
   60            | ID_TOK . EQ_TOK exp2 SEMICOLON_TOK

    EQ_TOK  shift, and go to state 156


State 135

   57 forpart1: vardec .

    $default  reduce using rule 57 (forpart1)


State 136

   55 loopstatement: FOR_TOK LPAREN_TOK forpart1 . forpart2 forpart3 RPAREN_TOK nonfunctionblock

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    SEMICOLON_TOK    shift, and go to state 157
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    forpart2  go to state 158
    exp4      go to state 159
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 137

   56 forpart1: varinitlist .

    $default  reduce using rule 56 (forpart1)


State 138

   44 ifstatement: IF_TOK condexp nonfunctionblock . ifstatementex
   45            | IF_TOK condexp nonfunctionblock . ifstatementex ELSE_TOK nonfunctionblock

    ELSEIF_TOK  shift, and go to state 160

    ELSEIF_TOK  [reduce using rule 47 (ifstatementex)]
    $default    reduce using rule 47 (ifstatementex)

    ifstatementex  go to state 161


State 139

   12 returnstatement: RETURN_TOK exp2 SEMICOLON_TOK .

    $default  reduce using rule 12 (returnstatement)


State 140

   32 statements: exp SEMICOLON_TOK statements .

    $default  reduce using rule 32 (statements)


State 141

   70 exp4: LPAREN_TOK exp4 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 162


State 142

   71 exp4: exp3 . OR_TOK exp4
   72     | exp3 . AND_TOK exp4
   74     | exp3 .
   75 exp3: LPAREN_TOK exp3 . RPAREN_TOK

    RPAREN_TOK  shift, and go to state 163
    AND_TOK     shift, and go to state 146
    OR_TOK      shift, and go to state 147

    RPAREN_TOK  [reduce using rule 74 (exp4)]


State 143

   76 exp3: exp2 . LT_TOK exp2
   77     | exp2 . GT_TOK exp2
   78     | exp2 . GTEQ_TOK exp2
   79     | exp2 . LTEQ_TOK exp2
   80     | exp2 . COMPARE_TOK exp2
   81     | exp2 . NOT_EQ_TOK exp2
   82     | exp2 .
   90 exp2: LPAREN_TOK exp2 . RPAREN_TOK

    RPAREN_TOK   shift, and go to state 53
    GT_TOK       shift, and go to state 148
    LT_TOK       shift, and go to state 149
    COMPARE_TOK  shift, and go to state 150
    GTEQ_TOK     shift, and go to state 151
    LTEQ_TOK     shift, and go to state 152
    NOT_EQ_TOK   shift, and go to state 153

    RPAREN_TOK  [reduce using rule 82 (exp3)]
    $default    reduce using rule 82 (exp3)


State 144

   73 exp4: NOT_TOK exp4 .

    $default  reduce using rule 73 (exp4)


State 145

   69 condexp: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 69 (condexp)


State 146

   72 exp4: exp3 AND_TOK . exp4

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 164
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 147

   71 exp4: exp3 OR_TOK . exp4

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 165
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 148

   77 exp3: exp2 GT_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 166
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 149

   76 exp3: exp2 LT_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 167
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 150

   80 exp3: exp2 COMPARE_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 168
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 151

   78 exp3: exp2 GTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 169
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 152

   79 exp3: exp2 LTEQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 170
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 153

   81 exp3: exp2 NOT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 171
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 154

   24 vardeclines: vardeclines . vardec
   49 switchblock: CURL_LPAREN_TOK vardeclines . caseblocks defaultblock CURL_RPAREN_TOK

    CASE_TOK  shift, and go to state 172
    TYPE_TOK  shift, and go to state 94

    $default  reduce using rule 51 (caseblocks)

    vardec      go to state 96
    caseblocks  go to state 173


State 155

   26 nonfunctionblock: exp SEMICOLON_TOK .

    $default  reduce using rule 26 (nonfunctionblock)


State 156

   59 varinitlist: ID_TOK EQ_TOK . exp2 COMMA_TOK varinitlist
   60            | ID_TOK EQ_TOK . exp2 SEMICOLON_TOK

    LPAREN_TOK       shift, and go to state 18
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp2      go to state 174
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 157

   62 forpart2: SEMICOLON_TOK .

    $default  reduce using rule 62 (forpart2)


State 158

   55 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 . forpart3 RPAREN_TOK nonfunctionblock

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    ID_TOK           shift, and go to state 54

    $default  reduce using rule 66 (forpart3)

    forpart3  go to state 175
    exp       go to state 176
    exp0      go to state 57


State 159

   61 forpart2: exp4 . forpart2ex SEMICOLON_TOK

    COMMA_TOK  shift, and go to state 177

    $default  reduce using rule 64 (forpart2ex)

    forpart2ex  go to state 178


State 160

   46 ifstatementex: ELSEIF_TOK . condexp nonfunctionblock ifstatementex

    LPAREN_TOK  shift, and go to state 105

    condexp  go to state 179


State 161

   44 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex .
   45            | IF_TOK condexp nonfunctionblock ifstatementex . ELSE_TOK nonfunctionblock

    ELSE_TOK  shift, and go to state 180

    ELSE_TOK  [reduce using rule 44 (ifstatement)]
    $default  reduce using rule 44 (ifstatement)


State 162

   70 exp4: LPAREN_TOK exp4 RPAREN_TOK .

    $default  reduce using rule 70 (exp4)


State 163

   75 exp3: LPAREN_TOK exp3 RPAREN_TOK .

    $default  reduce using rule 75 (exp3)


State 164

   72 exp4: exp3 AND_TOK exp4 .

    $default  reduce using rule 72 (exp4)


State 165

   71 exp4: exp3 OR_TOK exp4 .

    $default  reduce using rule 71 (exp4)


State 166

   77 exp3: exp2 GT_TOK exp2 .

    $default  reduce using rule 77 (exp3)


State 167

   76 exp3: exp2 LT_TOK exp2 .

    $default  reduce using rule 76 (exp3)


State 168

   80 exp3: exp2 COMPARE_TOK exp2 .

    $default  reduce using rule 80 (exp3)


State 169

   78 exp3: exp2 GTEQ_TOK exp2 .

    $default  reduce using rule 78 (exp3)


State 170

   79 exp3: exp2 LTEQ_TOK exp2 .

    $default  reduce using rule 79 (exp3)


State 171

   81 exp3: exp2 NOT_EQ_TOK exp2 .

    $default  reduce using rule 81 (exp3)


State 172

   50 caseblocks: CASE_TOK . var COLON_TOK statements caseblocks

    INTCONST     shift, and go to state 21
    DOUBLECONST  shift, and go to state 22
    CHARCONST    shift, and go to state 23
    ID_TOK       shift, and go to state 181

    var  go to state 182


State 173

   49 switchblock: CURL_LPAREN_TOK vardeclines caseblocks . defaultblock CURL_RPAREN_TOK

    DEFAULT_TOK  shift, and go to state 183

    $default  reduce using rule 53 (defaultblock)

    defaultblock  go to state 184


State 174

   59 varinitlist: ID_TOK EQ_TOK exp2 . COMMA_TOK varinitlist
   60            | ID_TOK EQ_TOK exp2 . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 185
    COMMA_TOK      shift, and go to state 186


State 175

   55 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 . RPAREN_TOK nonfunctionblock

    RPAREN_TOK  shift, and go to state 187


State 176

   65 forpart3: exp . forpart3ex

    COMMA_TOK  shift, and go to state 188

    $default  reduce using rule 68 (forpart3ex)

    forpart3ex  go to state 189


State 177

   63 forpart2ex: COMMA_TOK . exp4 forpart2ex

    LPAREN_TOK       shift, and go to state 119
    NOT_TOK          shift, and go to state 120
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    INTCONST         shift, and go to state 21
    DOUBLECONST      shift, and go to state 22
    CHARCONST        shift, and go to state 23
    ID_TOK           shift, and go to state 24

    funccall  go to state 25
    exp4      go to state 190
    exp3      go to state 122
    exp2      go to state 123
    exp1      go to state 27
    exp0      go to state 28
    var       go to state 29


State 178

   61 forpart2: exp4 forpart2ex . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 191


State 179

   46 ifstatementex: ELSEIF_TOK condexp . nonfunctionblock ifstatementex

    CURL_LPAREN_TOK  shift, and go to state 50
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement   go to state 126
    funccall          go to state 127
    block             go to state 128
    nonfunctionblock  go to state 192
    ifstatement       go to state 130
    loopstatement     go to state 131
    exp               go to state 132
    exp0              go to state 57


State 180

   45 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 50
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement   go to state 126
    funccall          go to state 127
    block             go to state 128
    nonfunctionblock  go to state 193
    ifstatement       go to state 130
    loopstatement     go to state 131
    exp               go to state 132
    exp0              go to state 57


State 181

  104 var: ID_TOK .

    $default  reduce using rule 104 (var)


State 182

   50 caseblocks: CASE_TOK var . COLON_TOK statements caseblocks

    COLON_TOK  shift, and go to state 194


State 183

   52 defaultblock: DEFAULT_TOK . COLON_TOK statements caseblocks

    COLON_TOK  shift, and go to state 195


State 184

   49 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock . CURL_RPAREN_TOK

    CURL_RPAREN_TOK  shift, and go to state 196


State 185

   60 varinitlist: ID_TOK EQ_TOK exp2 SEMICOLON_TOK .

    $default  reduce using rule 60 (varinitlist)


State 186

   59 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK . varinitlist

    ID_TOK  shift, and go to state 134

    varinitlist  go to state 197


State 187

   55 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK . nonfunctionblock

    CURL_LPAREN_TOK  shift, and go to state 50
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement   go to state 126
    funccall          go to state 127
    block             go to state 128
    nonfunctionblock  go to state 198
    ifstatement       go to state 130
    loopstatement     go to state 131
    exp               go to state 132
    exp0              go to state 57


State 188

   67 forpart3ex: COMMA_TOK . exp forpart3ex

    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    ID_TOK           shift, and go to state 54

    exp   go to state 199
    exp0  go to state 57


State 189

   65 forpart3: exp forpart3ex .

    $default  reduce using rule 65 (forpart3)


State 190

   63 forpart2ex: COMMA_TOK exp4 . forpart2ex

    COMMA_TOK  shift, and go to state 177

    $default  reduce using rule 64 (forpart2ex)

    forpart2ex  go to state 200


State 191

   61 forpart2: exp4 forpart2ex SEMICOLON_TOK .

    $default  reduce using rule 61 (forpart2)


State 192

   46 ifstatementex: ELSEIF_TOK condexp nonfunctionblock . ifstatementex

    ELSEIF_TOK  shift, and go to state 160

    ELSEIF_TOK  [reduce using rule 47 (ifstatementex)]
    $default    reduce using rule 47 (ifstatementex)

    ifstatementex  go to state 201


State 193

   45 ifstatement: IF_TOK condexp nonfunctionblock ifstatementex ELSE_TOK nonfunctionblock .

    $default  reduce using rule 45 (ifstatement)


State 194

   50 caseblocks: CASE_TOK var COLON_TOK . statements caseblocks

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 202
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 195

   52 defaultblock: DEFAULT_TOK COLON_TOK . statements caseblocks

    SWITCH_TOK       shift, and go to state 89
    WHILE_TOK        shift, and go to state 90
    FOR_TOK          shift, and go to state 91
    IF_TOK           shift, and go to state 92
    MINUS_MINUS_TOK  shift, and go to state 19
    PLUS_PLUS_TOK    shift, and go to state 20
    RETURN_TOK       shift, and go to state 93
    ID_TOK           shift, and go to state 95

    returnstatement  go to state 97
    funccall         go to state 98
    statements       go to state 203
    ifstatement      go to state 100
    switchstatement  go to state 101
    loopstatement    go to state 102
    exp              go to state 103
    exp0             go to state 57


State 196

   49 switchblock: CURL_LPAREN_TOK vardeclines caseblocks defaultblock CURL_RPAREN_TOK .

    $default  reduce using rule 49 (switchblock)


State 197

   59 varinitlist: ID_TOK EQ_TOK exp2 COMMA_TOK varinitlist .

    $default  reduce using rule 59 (varinitlist)


State 198

   55 loopstatement: FOR_TOK LPAREN_TOK forpart1 forpart2 forpart3 RPAREN_TOK nonfunctionblock .

    $default  reduce using rule 55 (loopstatement)


State 199

   67 forpart3ex: COMMA_TOK exp . forpart3ex

    COMMA_TOK  shift, and go to state 188

    $default  reduce using rule 68 (forpart3ex)

    forpart3ex  go to state 204


State 200

   63 forpart2ex: COMMA_TOK exp4 forpart2ex .

    $default  reduce using rule 63 (forpart2ex)


State 201

   46 ifstatementex: ELSEIF_TOK condexp nonfunctionblock ifstatementex .

    $default  reduce using rule 46 (ifstatementex)


State 202

   50 caseblocks: CASE_TOK var COLON_TOK statements . caseblocks

    CASE_TOK  shift, and go to state 172

    $default  reduce using rule 51 (caseblocks)

    caseblocks  go to state 205


State 203

   52 defaultblock: DEFAULT_TOK COLON_TOK statements . caseblocks

    CASE_TOK  shift, and go to state 172

    $default  reduce using rule 51 (caseblocks)

    caseblocks  go to state 206


State 204

   67 forpart3ex: COMMA_TOK exp forpart3ex .

    $default  reduce using rule 67 (forpart3ex)


State 205

   50 caseblocks: CASE_TOK var COLON_TOK statements caseblocks .

    $default  reduce using rule 50 (caseblocks)


State 206

   52 defaultblock: DEFAULT_TOK COLON_TOK statements caseblocks .

    $default  reduce using rule 52 (defaultblock)
